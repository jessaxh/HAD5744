geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line()
"2020-08-01")
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
hq1_line_graph
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
# Look at two similar foods: Sourdough and Cereal
ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
hq1_line_graph
# Look at two similar foods: Sourdough and Cereal
sourdough_plot <- ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
cereal_plot <- ggplot(assign_data[which(assign_data$keyword=="cereal"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
cereal_plot
sandwich_plot <- ggplot(assign_data[which(assign_data$keyword=="sandwich"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
soup_plot <- ggplot(assign_data[which(assign_data$keyword=="soup"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
soup_plot
sandwich_plot
sourdough_plot
# Regression data -- just ohio and michigan
regdata <- assign_data %>% filter(keyword %in% c("sourdough","cereal"))
# Definition of key variables
regdata <- regdata %>% mutate(treated = ifelse(location == "sourdough", 1, 0),
interaction = ifelse(location == "sourdough",date,0))
# Definition of key variables
regdata <- regdata %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0),
interaction = ifelse(keyword == "sourdough",date,0))
# Statistical tests: are the two groups' trends different?
pretrend_test <- lm(hits ~ date + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
View(sandwich_plot)
View(sandwich_plot)
view(cereal_plot,sandwich_plot,soup_plot,sourdough_plot)
cereal_plot,sandwich_plot,soup_plot,sourdough_plot
c(cereal_plot,sandwich_plot,soup_plot,sourdough_plot)
cereal_plot
sandwich_plot
sourdough_plot
soup_plot
sourdough_plot
sandwich_plot
soup_plot
cereal_plot
assign_data <- assign_data %>% mutate(pandemic_begins = (date >= assign_data$date[75]),
treated_group = keyword %in% "sourdough",
interaction = pandemic_begins*treated_group)
#descriptive stats
count(assign_data, pandemic_begins, treated_group, interaction)
reg_data <- assign_data %>% mutate(pandemic_begins = (date >= assign_data$date[75]),
treated_group = keyword %in% "sourdough",
interaction = pandemic_begins*treated_group)
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) + ggtitle("Interest in Food Types Over Time")
hq1_line_graph
# Definition of key variables
regdata <- assign_data %>% mutate(treated = (keword == "sourdough")
post = (date >= assign_data$date[75]),
# Definition of key variables
regdata <- assign_data %>% mutate(treated = (keword == "sourdough"),
post = (date >= assign_data$date[75]),
interaction = treated*post))
# Definition of key variables
regdata <- assign_data %>% mutate(treated = (keword == "sourdough"),
post = (date >= assign_data$date[75]),
interaction = treated*post)
pretrend_test <- lm(hits ~ date + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
pretrend_test <- lm(hits ~ treated + post + interaction, data=regdata)
pretrend_test <- lm(hits ~ treated + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
regdata <- mydata %>% filter(keyword %in% c("sourdough","cereal"))
(keyword %in% c("sourdough","cereal"))
regdata <- assign_data %>% filter(keyword %in% c("sourdough","cereal"))
regdata <- regdata %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0),
interaction = ifelse(keyword == "sourdough",date,0))
pretrend_test <- lm(hits ~ date + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
regdata <- regdata %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0),
interaction = ifelse(keyword == "sourdough",date,0))
View(assign_data)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
pretrend_test <- lm(hits ~ keyword + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
regdata <- regdata %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0),
interaction = ifelse(keyword == "sourdough",date >= 2020-03-150))
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(ggtext)
library(showtext)
library(stringr)
library(fastDummies)
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) + ggtitle("Interest in Food Types Over Time")
hq1_line_graph
# Look at plots for each food individually, to gauge trend lines:
assign_data_sel <- assign_data %>% filter(keyword %>% c("sourdough", "cereal", "soup", "sandwich"))
# Look at plots for each food individually, to gauge trend lines:
assign_data_sel <- assign_data %>% filter(keyword %>% c("sourdough", "cereal", "soup", "sandwich"))
# Look at plots for each food individually, to gauge trend lines:
assign_data_sel <- assign_data %>% dplyr::filter(keyword %>% c("sourdough", "cereal", "soup", "sandwich"))
# Look at plots for each food individually, to gauge trend lines:
sourdough_plot <- ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
cereal_plot <- ggplot(assign_data[which(assign_data$keyword=="cereal"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
sandwich_plot <- ggplot(assign_data[which(assign_data$keyword=="sandwich"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
soup_plot <- ggplot(assign_data[which(assign_data$keyword=="soup"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
cereal_plot
sandwich_plot
soup_plot
sourdough_plot
regdata <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0))
View(reg_data)
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
regdata <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0))
View(reg_data)
View(assign_data)
View(reg_data)
library(here)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(ggtext)
library(showtext)
library(stringr)
library(fastDummies)
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) + ggtitle("Interest in Food Types Over Time")
hq1_line_graph
regdata <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0))
View(regdata)
regdata <- regdata %>% mutate(pandemic_begun = ifelse(date >= "date[75]", 1, 0))
View(regdata)
View(regdata)
regdata <- regdata %>% mutate(pandemic_begun = ifelse(date >= "2020-03-15", 1, 0))
View(regdata)
regdata <- regdata %>% mutate(interaction = treated*pandemic_begun)
View(regdata)
# Statistical tests: are the two groups' trends different?
pretrend_test <- lm(hits ~ treated + pandemic_begun + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
library(modelsummary)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
# Look at plots for each food individually, to gauge trend lines:
sourdough_plot <- ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) +  xlim(assign_data$date[75],)
# Look at plots for each food individually, to gauge trend lines:
sourdough_plot <- ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) +  xlim(assign_data$date[75], 0)
sourdough_plot
# Look at plots for each food individually, to gauge trend lines:
sourdough_plot <- ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
sourdough_plot
cereal_plot <- ggplot(assign_data[which(assign_data$keyword=="cereal"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) + xlim(0, assign_data$date[75])
cereal_plot
cereal_plot <- ggplot(assign_data[which(assign_data$keyword=="cereal"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
# Look at plots for each food individually, to gauge trend lines:
sourdough_plot <- ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
cereal_plot
# Look at plots for each food individually, to gauge trend lines:
sourdough_plot <- ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) +
coord_cartesian(xlim = c(0, assign_data$date[75]), ylim = c(0, 50))
sourdough_plot
# Look at plots for each food individually, to gauge trend lines:
sourdough_plot <- ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) +
coord_cartesian(xlim = c(0, assign_data$date[75]), ylim = c(0, 50))
sourdough_plot
# Look at plots for each food individually, to gauge trend lines:
sourdough_plot <- ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) +
coord_cartesian(xlim = c(0, assign_data$date[75]))
sourdough_plot
# Look at plots for each food individually, to gauge trend lines:
sourdough_plot <- ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
sourdough_plot
sourdough_plot + coord_cartesian(xlim= c(0,75))
sourdough_plot + coord_cartesian(xlim= c(0,76))
cereal_plot + coord_cartesian(xlim= c(0,76))
sandwich_plot + coord_cartesian(xlim= c(0,76))
# Look at plots for each food individually, to gauge trend lines:
sourdough_plot <- ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
cereal_plot <- ggplot(assign_data[which(assign_data$keyword=="cereal"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
sandwich_plot <- ggplot(assign_data[which(assign_data$keyword=="sandwich"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
soup_plot <- ggplot(assign_data[which(assign_data$keyword=="soup"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
cereal_plot + coord_cartesian(xlim= c(0,76))
sandwich_plot + coord_cartesian(xlim= c(0,76))
soup_plot+ coord_cartesian(xlim= c(0,76))
sourdough_plot + coord_cartesian(xlim= c(0,76))
#Create Treated Variable for sourdough https://www.princeton.edu/~otorres/DID101R.pdf
regdata <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0))
# Create a dummy variable to indicate the time when the treatment started.
regdata <- regdata %>% mutate(pandemic_begun = ifelse(date >= "2020-03-15", 1, 0))
#Create interaction variable between treated and beginning of pandemic
regdata <- regdata %>% mutate(interaction = treated*pandemic_begun)
# Statistical tests: are the two groups' trends different?
pretrend_test <- lm(hits ~ treated + pandemic_begun + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
#Dropping Control Groups
hq1_line_graph + + coord_cartesian(xlim= c(0,76))
hq1_line_graph + coord_cartesian(xlim= c(0,76))
hq1_line_graph + coord_cartesian(xlim= c(0,76))
regdata <- regdata %>% filter(keyword %in% c("sourdough","cereal"))
regdata <- regdata %>% filter(keyword %in% c("sourdough","cereal"))
View(regdata)
str(regdata)
unique(regdata$keyword)
new_regdata<- regdata %>% filter(keyword %in% c("sourdough","cereal"))
unique(new_regdata$keyword)
pretrend_test <- lm(hits ~ treated + pandemic_begun + interaction, data=new_regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
#Create Treated Variable for sourdough https://www.princeton.edu/~otorres/DID101R.pdf
regdata <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0))
# Create a dummy variable to indicate the time when the treatment started.
regdata <- regdata %>% mutate(pandemic_begun = ifelse(date >= "2020-03-15", 1, 0))
#Create interaction variable between treated and beginning of pandemic
regdata <- regdata %>% mutate(interaction = treated*pandemic_begun)
# Statistical tests: are the two groups' trends different?
pretrend_test <- lm(hits ~ treated + pandemic_begun + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
#Dropping Control Groups
new_regdata<- regdata %>% filter(keyword %in% c("sourdough","cereal"))
unique(new_regdata$keyword)
new_pretrend_test <- lm(hits ~ treated + pandemic_begun + interaction, data=new_regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
#i think this is how you do it but im not sure
msummary(list(pretrend_test,new_pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
hq1_line_graph
