cereal_plot
cereal_plot <- ggplot(assign_data[which(assign_data$keyword=="cereal"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
# Look at plots for each food individually, to gauge trend lines:
sourdough_plot <- ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
cereal_plot
# Look at plots for each food individually, to gauge trend lines:
sourdough_plot <- ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) +
coord_cartesian(xlim = c(0, assign_data$date[75]), ylim = c(0, 50))
sourdough_plot
# Look at plots for each food individually, to gauge trend lines:
sourdough_plot <- ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) +
coord_cartesian(xlim = c(0, assign_data$date[75]), ylim = c(0, 50))
sourdough_plot
# Look at plots for each food individually, to gauge trend lines:
sourdough_plot <- ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) +
coord_cartesian(xlim = c(0, assign_data$date[75]))
sourdough_plot
# Look at plots for each food individually, to gauge trend lines:
sourdough_plot <- ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
sourdough_plot
sourdough_plot + coord_cartesian(xlim= c(0,75))
sourdough_plot + coord_cartesian(xlim= c(0,76))
cereal_plot + coord_cartesian(xlim= c(0,76))
sandwich_plot + coord_cartesian(xlim= c(0,76))
# Look at plots for each food individually, to gauge trend lines:
sourdough_plot <- ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
cereal_plot <- ggplot(assign_data[which(assign_data$keyword=="cereal"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
sandwich_plot <- ggplot(assign_data[which(assign_data$keyword=="sandwich"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
soup_plot <- ggplot(assign_data[which(assign_data$keyword=="soup"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
cereal_plot + coord_cartesian(xlim= c(0,76))
sandwich_plot + coord_cartesian(xlim= c(0,76))
soup_plot+ coord_cartesian(xlim= c(0,76))
sourdough_plot + coord_cartesian(xlim= c(0,76))
#Create Treated Variable for sourdough https://www.princeton.edu/~otorres/DID101R.pdf
regdata <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0))
# Create a dummy variable to indicate the time when the treatment started.
regdata <- regdata %>% mutate(pandemic_begun = ifelse(date >= "2020-03-15", 1, 0))
#Create interaction variable between treated and beginning of pandemic
regdata <- regdata %>% mutate(interaction = treated*pandemic_begun)
# Statistical tests: are the two groups' trends different?
pretrend_test <- lm(hits ~ treated + pandemic_begun + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
#Dropping Control Groups
hq1_line_graph + + coord_cartesian(xlim= c(0,76))
hq1_line_graph + coord_cartesian(xlim= c(0,76))
hq1_line_graph + coord_cartesian(xlim= c(0,76))
regdata <- regdata %>% filter(keyword %in% c("sourdough","cereal"))
regdata <- regdata %>% filter(keyword %in% c("sourdough","cereal"))
View(regdata)
str(regdata)
unique(regdata$keyword)
new_regdata<- regdata %>% filter(keyword %in% c("sourdough","cereal"))
unique(new_regdata$keyword)
pretrend_test <- lm(hits ~ treated + pandemic_begun + interaction, data=new_regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
#Create Treated Variable for sourdough https://www.princeton.edu/~otorres/DID101R.pdf
regdata <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0))
# Create a dummy variable to indicate the time when the treatment started.
regdata <- regdata %>% mutate(pandemic_begun = ifelse(date >= "2020-03-15", 1, 0))
#Create interaction variable between treated and beginning of pandemic
regdata <- regdata %>% mutate(interaction = treated*pandemic_begun)
# Statistical tests: are the two groups' trends different?
pretrend_test <- lm(hits ~ treated + pandemic_begun + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
#Dropping Control Groups
new_regdata<- regdata %>% filter(keyword %in% c("sourdough","cereal"))
unique(new_regdata$keyword)
new_pretrend_test <- lm(hits ~ treated + pandemic_begun + interaction, data=new_regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
#i think this is how you do it but im not sure
msummary(list(pretrend_test,new_pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
hq1_line_graph
knitr::opts_chunk$set(echo = TRUE)
hq1_line_graph + coord_cartesian(xlim= c(0,76))
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
library(here)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(ggtext)
library(showtext)
library(stringr)
library(fastDummies)
library(modelsummary)
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) + ggtitle("Interest in Food Types Over Time")
hq1_line_graph
# Look at plot at pre-treatment, to gauge trend lines and similarities or differences:
hq1_line_graph + coord_cartesian(xlim= c(0,76))
knitr::opts_chunk$set(echo = TRUE)
#Create Treated Variable for sourdough https://www.princeton.edu/~otorres/DID101R.pdf
regdata <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0))
library(here)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(ggtext)
library(showtext)
library(stringr)
library(fastDummies)
library(modelsummary)
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
#Create Treated Variable for sourdough https://www.princeton.edu/~otorres/DID101R.pdf
regdata <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0))
# Create a dummy variable to indicate the time when the treatment started.
regdata <- regdata %>% mutate(pandemic_begun = ifelse(date >= "2020-03-15", 1, 0))
#Create interaction variable between treated and beginning of pandemic
regdata <- regdata %>% mutate(interaction = treated*pandemic_begun)
# Statistical tests: are the two groups' trends different?
pretrend_test <- lm(hits ~ treated + pandemic_begun + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
#Dropping Control Groups
new_regdata<- regdata %>% filter(keyword %in% c("sourdough","cereal"))
unique(new_regdata$keyword)
new_pretrend_test <- lm(hits ~ treated + pandemic_begun + interaction, data=new_regdata)
msummary(list(pretrend_test,new_pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
#i think this is how you do it but im not sure
knitr::opts_chunk$set(echo = TRUE)
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
library(here)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(ggtext)
library(showtext)
library(stringr)
library(fastDummies)
library(modelsummary)
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
assign_data$date <- as.factor(assign_data$date)
assign_data$date <- as.numeric(assign_data$date) #idk if we should do this
q1_line_graph <- ggplot(assign_data, (aes(x = date, y = hits, group = keyword))) +
geom_line(aes(color = keyword)) + theme_linedraw() + labs(x = "Date", y = "Hits") +
geom_vline(xintercept = as.numeric(assign_data$date[75]),
color = "red") + geom_text(aes(x = as.numeric(date[120]), label="Start of Pandemic (2020-03-15)", y=90), color = "red") +
scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"), labels = waiver())
q1_line_graph
#I wanted to make a line graph without converting our dates to numeric:
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) + ggtitle("Interest in Food Types Over Time")
hq1_line_graph
# Look at plot at pre-treatment, to gauge trend lines and similarities or differences:
hq1_line_graph + coord_cartesian(xlim= c(0,76))
#we can see before the start of the pandemic sourdough looked similar to cereal but did not look anything like soup or sandwich so considering droping thos
library(here)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(ggtext)
library(showtext)
library(stringr)
library(fastDummies)
library(modelsummary)
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
#I wanted to make a line graph without converting our dates to numeric:
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) + ggtitle("Interest in Food Types Over Time")
hq1_line_graph
# Look at plot at pre-treatment, to gauge trend lines and similarities or differences:
hq1_line_graph + coord_cartesian(xlim= c(0,76))
#Create Treated Variable for sourdough https://www.princeton.edu/~otorres/DID101R.pdf
regdata <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0))
# Create a dummy variable to indicate the time when the treatment started.
regdata <- regdata %>% mutate(pandemic_begun = ifelse(date >= "2020-03-15", 1, 0))
#Create interaction variable between treated and beginning of pandemic
regdata <- regdata %>% mutate(interaction = treated*pandemic_begun)
# Statistical tests: are the two groups' trends different?
pretrend_test <- lm(hits ~ treated + pandemic_begun + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
#Dropping Control Groups
#dropping soup and sandwich from data
new_regdata<- regdata %>% filter(keyword %in% c("sourdough","cereal"))
unique(new_regdata$keyword)
new_pretrend_test <- lm(hits ~ treated + pandemic_begun + interaction, data=new_regdata)
msummary(list(pretrend_test,new_pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
#i think this is how you do it but im not sure
relative_regdata<- new_regdata %>% mutate(reltime = round((as.numeric(date) - 15)))
View(relative_regdata)
IsDate(assign_data$date)
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
assign_data$date <- as.factor(assign_data$date)
assign_data$date <- as.numeric(assign_data$date)
q1_line_graph <- ggplot(assign_data, (aes(x = date, y = hits, group = keyword))) +
geom_line(aes(color = keyword)) + theme_linedraw() + labs(x = "Date", y = "Hits") +
geom_vline(xintercept = as.numeric(assign_data$date[75]),
color = "red") + geom_text(aes(x = as.numeric(date[120]), label="Start of Pandemic (2020-03-15)", y=90), color = "red") +
scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"), labels = waiver())
q1_line_graph
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) + ggtitle("Interest in Food Types Over Time")
hq1_line_graph
# Look at plot at pre-treatment, to gauge trend lines and similarities or differences:
hq1_line_graph + coord_cartesian(xlim= c(0,76))
#we can see before the start of the pandemic sou
hq1_line_graph
library(here)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(ggtext)
library(showtext)
library(stringr)
library(fastDummies)
library(modelsummary)
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
assign_data$date <- as.factor(assign_data$date)
assign_data$date <- as.numeric(assign_data$date)
q1_line_graph <- ggplot(assign_data, (aes(x = date, y = hits, group = keyword))) +
geom_line(aes(color = keyword)) + theme_linedraw() + labs(x = "Date", y = "Hits") +
geom_vline(xintercept = as.numeric(assign_data$date[75]),
color = "red") + geom_text(aes(x = as.numeric(date[120]), label="Start of Pandemic (2020-03-15)", y=90), color = "red") +
scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"), labels = waiver())
q1_line_graph
#I wanted to make a line graph without converting our dates to numeric:
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) + ggtitle("Interest in Food Types Over Time")
hq1_line_graph
# Look at plot at pre-treatment, to gauge trend lines and similarities or differences:
hq1_line_graph + coord_cartesian(xlim= c(0,76))
#we can see before the start of the pandemic sourdough looked similar to cereal but did not look anything like soup or sandwich so considering droping thos
library(here)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(ggtext)
library(showtext)
library(stringr)
library(fastDummies)
library(modelsummary)
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
#I wanted to make a line graph without converting our dates to numeric:
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) + ggtitle("Interest in Food Types Over Time")
hq1_line_graph
# Look at plot at pre-treatment, to gauge trend lines and similarities or differences:
hq1_line_graph + coord_cartesian(xlim= c(0,76))
#we can see before the start of the pandemic sourdough looked similar to cereal but did not look anything like soup or sandwich so considering droping thos
new_regdata$date <- as.factor(new_regdata$date)
#Create Treated Variable for sourdough https://www.princeton.edu/~otorres/DID101R.pdf
regdata <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0))
# Create a dummy variable to indicate the time when the treatment started.
regdata <- regdata %>% mutate(pandemic_begun = ifelse(date >= "2020-03-15", 1, 0))
#Create interaction variable between treated and beginning of pandemic
regdata <- regdata %>% mutate(interaction = treated*pandemic_begun)
# Statistical tests: are the two groups' trends different?
pretrend_test <- lm(hits ~ treated + pandemic_begun + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
#Dropping Control Groups
#dropping soup and sandwich from data
new_regdata<- regdata %>% filter(keyword %in% c("sourdough","cereal"))
unique(new_regdata$keyword)
new_pretrend_test <- lm(hits ~ treated + pandemic_begun + interaction, data=new_regdata)
msummary(list(pretrend_test,new_pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
#i think this is how you do it but im not sure
#create a realtive_month variable by shifting the "date" variable back 15 days and then taking the month of the resulting date
new_regdata$date <- as.factor(new_regdata$date)
new_regdata$date <- as.numeric(new_regdata$date)
relative_regdata<- new_regdata %>% mutate(reltime = round((as.numeric(date) - 15)))
#create an "After" variable equal to 1/0 or True/False if the date is March 15 or afterwards
#illustrate how the values of "relative_month" line up with "date" and subtracte a number from "relative_month" so the last period just before treatment (Feb 16 - Mar 14)  is 0. (Also, change the Jan 1 -14 month so it's one less than the Jan 15- Feb 14 month)
View(relative_regdata)
View(assign_data)
new_regdata<- regdata %>% filter(keyword %in% c("sourdough","cereal"))
unique(new_regdata$keyword)
#create a realtive_month variable by shifting the "date" variable back 15 days and then taking the month of the resulting date
new_regdata$date <- as.factor(new_regdata$date)
relative_regdata<- new_regdata %>% mutate(reltime = round((as.numeric(date) - 15)))
View(relative_regdata)
#dropping soup and sandwich from data
new_regdata<- regdata %>% filter(keyword %in% c("sourdough","cereal"))
#create a realtive_month variable by shifting the "date" variable back 15 days and then taking the month of the resulting date
library(lubridate)
new_regdata %>% mutate(date = ymd(date)) %>% mutate(time_to_treatment = date - 15)
class(new_regdata$date)
as.factor(new_regdata$date)
as.numeric(new_regdata$date)
new_regdata$date <- as.factor(new_regdata$date)
new_regdata$date <- as.numeric(new_regdata$date)
View(new_regdata)
new_regdata<- regdata %>% filter(keyword %in% c("sourdough","cereal"))
new_regdata <- new_regdata %>% mutate(numeric_date = as.factor(new_regdata$date) %>% as.numeric(new_regdata$date))
View(new_regdata)
new_regdata <- new_regdata %>% mutate(reltime = round(as.numeric(as.factor(new_regdata$date)) - 15)
View(new_regdata)
View(new_regdata)
new_regdata <- new_regdata %>% mutate(reltime = round(as.numeric(as.factor(new_regdata$date)) - 15)
new_regdata
new_regdata
new_regdata <- new_regdata %>% mutate(reltime = (round(as.numeric(as.factor(new_regdata$date)) - 15))
View(new_regdata)
View(new_pretrend_test)
View(new_regdata)
View(new_regdata)
new_regdata <- new_regdata %>% mutate(reltime = numeric_date - 15)
View(new_regdata)
new_regdata<- regdata %>% filter(keyword %in% c("sourdough","cereal"))
new_regdata$date <- as.Date()
new_regdata$date <- format(as.Date(new_regdata$date), "%Y/%m/%d")
new_regdata <- mutate(reltime = new_regdata$date - 15)
new_regdata<- regdata %>% filter(keyword %in% c("sourdough","cereal"))
View(new_regdata)
new_regdata <- new_regdata %>% mutate(date_numeric = as.numeric(as.factor(new_regdata$date)))
new_regdata <- mutate(reltime = new_regdata$date - 15)
new_regdata <- mutate(reltime = new_regdata$date_numeric - 15)
new_regdata <- new_regdata %>% mutate(date_numeric = as.numeric(as.factor(new_regdata$date)))
new_regdata <- mutate(reltime = new_regdata$date_numeric - 15)
View(new_regdata)
new_regdata <- mutate(reltime = new_regdata$date_numeric - 15)
class(new_regdata$date_numeric)
new_regdata <- mutate(reltime = new_regdata$date_numeric - 15)
new_regdata<- regdata %>% filter(keyword %in% c("sourdough","cereal"))
