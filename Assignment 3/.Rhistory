knitr::opts_chunk$set(echo = TRUE)
library(here)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(ggtext)
library(showtext)
library(stringr)
library(fastDummies)
library(modelsummary)
library(lubridate)
library(gtsummary)
library(fixest)
library(quantreg)
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
assign_data$new_date <- ymd(assign_data$date)
class(assign_data$new_date)
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) + ggtitle("Interest in Food Types Over Time")
hq1_line_graph
# Look at plot at pre-treatment, to gauge trend lines and similarities or differences:
hq1_line_graph + coord_cartesian(xlim= c(0,76))
#we can see before the start of the pandemic sourdough looked
# Create Treated Variable for sourdough https://www.princeton.edu/~otorres/DID101R.pdf
regdata <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0))
# Create a dummy variable to indicate the time when the treatment started.
regdata <- regdata %>% mutate(pandemic_begun = ifelse(date >= "2020-03-15", 1, 0))
# Create interaction variable between treated and beginning of pandemic
regdata <- regdata %>% mutate(interaction = treated*pandemic_begun)
# Statistical tests: are the two groups' trends different?
pretrend_test <- lm(hits ~ treated + pandemic_begun + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
# Dropping Control Groups
# Dropping soup and sandwich from data
new_regdata <- regdata %>% filter(keyword %in% c("sourdough","cereal"))
unique(new_regdata$keyword)
new_pretrend_test <- lm(hits ~ treated + pandemic_begun + interaction, data=new_regdata)
msummary(list(pretrend_test, new_pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
#i think this is how you do it but im not sure
msummary(list("All control groups" =pretrend_test,"Dropped Control Groups"= new_pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01))
#create a relative_month variable by shifting the "date" variable back 15 days (so that the treatment day is the first day of the month)  and then taking the month of the resulting date
new_regdata <- new_regdata %>% mutate(relative_month = new_date - 14)
#shift date back 15 days, used new_date instead of date as date is a character while new date is the class date
# I used 14 so that the treatment day is may first rather than February 29
#create an "After" variable equal to 1/0 or True/False if the date is March 15 or afterwards
new_regdata <- new_regdata %>% mutate(After = ifelse(relative_month >= "2020-03-15", 1, 0 ))
#illustrate how the values of "relative_month" line up with "date" and subtract a number from "relative_month" so the last period just before treatment (Feb 16 - Mar 14)  is 0. (Also, change the Jan 1 -14 month so it's one less than the Jan 15- Feb 14 month)
relative_month_date_illustration <- new_regdata %>% select(relative_month, new_date)
#table with relative month and new date next to each other
relative_month_date_illustration <- relative_month_date_illustration %>% mutate(diff_bt_date = difftime(new_date, relative_month, units = "days"))
plot(relative_month_date_illustration$diff_bt_date)
q_c_table <- tibble(relative_month_date_illustration)
#Use two-way fixed effects to estimate the difference-in-difference estimate of the effect of lockdown on sourdough popularity. What are your two fixed effects?
fixed_effects_model <- feols(hits ~ interaction | pandemic_begun + treated, data = new_regdata)
#idk what fixed effects we have to include here also not sure if we include all 3 of these variables in the ols  (maybe include keyword as the fixed effect but that introduces colineaarity with treated)
fixed_effects_model
#report and interper results, with standard errors clustered at keyword level
msummary(fixed_effects_model, vcov= ~keyword, fmt = '%#.14f') #is this how you cluster by keyword level haha
msummary(fixed_effects_model, vcov= ~keyword, fmt = '%#.14f')
fixed_effects_model <- feols(hits ~ interaction | pandemic_begun + treated, data = new_regdata)
#idk what fixed effects we have to include here also not sure if we include all 3 of these variables in the ols  (maybe include keyword as the fixed effect but that introduces colineaarity with treated)
fixed_effects_model
msummary(fixed_effects_model, vcov= ~keyword, fmt = '%#.14f') #is this how you cluster by keyword level haha
name <- Sys.info()
name[7]
here()
load("/Users/husaynjessa/Documents/GitHub/HAD5744/Assignment 3/a3_p3_medicare.RData")
# Construct Medicare coverage variable (1 = covered; 0 = not covered)
mydata <- mydata %>% mutate(medicare = ifelse(agex >= 65, 1, 0))
medicare <- mydata[mydata$medicare == 1, ]
no_medicare <- mydata[mydata$medicare == 0, ]
# View distribution of out-of-pocket medical spending for spending after Medicare coverage
ggplot(medicare, aes(x=totexp)) + geom_histogram() + geom_histogram(bins = 100) + xlim(0, 100000) + ylim(0, 20000)
# View distribution of out-of-pocket medical spending for spending before Medicare coverage
ggplot(no_medicare, aes(x=totexp)) + geom_histogram() + geom_histogram(bins = 100) + xlim(0, 25000) + ylim(0, 100000)
naive_ols <- lm(totexp ~ medicare + sex + educyr + racex + faminc, data = mydata, weights = perwt) # We will have to figure out what we want to control for
summary(naive_ols)
attach(mydata)
hist(totexp)
hist(log(totexp))
#based on the histograms we decide to log totexp
summary(naive_ols)
msummary(naive_ols)
# View distribution of out-of-pocket medical spending for spending after Medicare coverage
ggplot(medicare, aes(x=log(totexp)) + geom_histogram() + geom_histogram(bins = 100) + xlim(0, 100000) + ylim(0, 20000)
ggplot(medicare, aes(x=log(totexp)) + geom_histogram() + geom_histogram(bins = 100) + xlim(0, 100000) + ylim(0, 20000)
# View distribution of out-of-pocket medical spending for spending after Medicare coverage
ggplot(medicare, aes(x=log(totexp)) + geom_histogram() + geom_histogram(bins = 100) + xlim(0, 100000) + ylim(0, 20000)
# View distribution of out-of-pocket medical spending for spending after Medicare coverage
ggplot(medicare, aes(x=totexp) + geom_histogram() + geom_histogram(bins = 100) + xlim(0, 100000) + ylim(0, 20000)
# View distribution of out-of-pocket medical spending for spending after Medicare coverage
ggplot(medicare, aes(x=totexp)) + geom_histogram() + geom_histogram(bins = 100) + xlim(0, 100000) + ylim(0, 20000)
mytau <- rep(NA,20) # empty vector: quantiles
coefs <- rep(NA, 20) # empty vector: coefficients
lb <- rep(NA, 20) # empty vector: 95% LB
ub <- rep(NA, 20) # empty vector: 95% UB
for (t in 1:20) {
mytau[t] <- t/20 # indicate which decile I am using
print(paste0("Considering quantile ",mytau[t],sep=" "))
quantreg <- rq(totexp ~ medicare + educyr + sex + racex + faminc, data = mydata, weights = perwt,
tau = mytau[t]) # tau ranges from 0 to 1
coefs[t] <- quantreg$coefficients[2]
quantsummary <- summary(quantreg)
lb[t] <- coefs[t]-1.96*quantsummary$coefficients[2,2]
ub[t] <- coefs[t]+1.96*quantsummary$coefficients[2,2]
}
