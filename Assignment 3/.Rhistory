pretrend_data <- lm(hits~date*treated, data = pretrend_data)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01))
library(here)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(ggtext)
library(showtext)
library(stringr)
library(fastDummies)
library(modelsummary)
library(lubridate)
library(gtsummary)
library(fixest)
library(quantreg)
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
assign_data$new_date <- lubridate:(assign_data$date)
assign_data$date <- as.Date(assign_data$date)
class(assign_data$date)
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) + ggtitle("Interest in Food Types Over Time")
hq1_line_graph
#create column new_date to change the date variable into dates
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
assign_data$new_date <- ymd(assign_data$date)
class(assign_data$new_date)
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) + ggtitle("Interest in Food Types Over Time")
hq1_line_graph
# Look at plot at pre-treatment, to gauge trend lines and similarities or differences:
hq1_line_graph + coord_cartesian(xlim= c(0,76))
#we can see before the start of the pandemic sourdough looked similar to cereal but did not look anything like soup or sandwich so considering droping thos
View(assign_data)
pretrend_data <- assign_data %>% filter(new_date < ymd("2020-03-15"))
pretrend_data <- pretrend_data %>% mutate(treated = ifelse(keyword == "sourdough", 1,0))
pretrend_data <- lm(hits~new_date*treated, data = pretrend_data)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01))
pretrend_data <- assign_data %>% filter(new_date < ymd("2020-03-15"))
pretrend_data
View(pretrend_data)
#create column new_date to change the date variable into dates
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
assign_data$new_date <- ymd(assign_data$date)
class(assign_data$new_date)
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) + ggtitle("Interest in Food Types Over Time")
hq1_line_graph
# Look at plot at pre-treatment, to gauge trend lines and similarities or differences:
hq1_line_graph + coord_cartesian(xlim= c(0,76))
#we can see before the start of the pandemic sourdough looked similar to cereal but did not look anything like soup or sandwich so considering droping thos
assign_data$date = as.Date(assign_data$date)
assign_data$date = as.Date(assign_data$date)
pretrend_test <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0)
pretrend_test <- assign_data %>% filter(date < "2020-03-15")
pretrend_test <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0)
name <- Sys.info()
knitr::opts_chunk$set(echo = TRUE)
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
#create column new_date to change the date variable into dates
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
library(here)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(ggtext)
library(showtext)
library(stringr)
library(fastDummies)
library(modelsummary)
library(lubridate)
library(gtsummary)
library(fixest)
library(quantreg)
# Construct Medicare coverage variable (1 = covered; 0 = not covered)
mydata <- mydata %>% mutate(medicare = ifelse(agex >= 65, 1, 0))
name <- Sys.info()
name[7]
here()
load("/Users/husaynjessa/Documents/GitHub/HAD5744/Assignment 3/a3_p3_medicare.RData")
# Construct Medicare coverage variable (1 = covered; 0 = not covered)
mydata <- mydata %>% mutate(medicare = ifelse(agex >= 65, 1, 0))
medicare <- mydata[mydata$medicare == 1, ]
no_medicare <- mydata[mydata$medicare == 0, ]
ggplot(mydata, aes(x = (agex > 65), y = totexp)) + geom_point() #this also demonstrates not having medicare increases total expenditure
# View distribution of out-of-pocket medical spending for spending after Medicare coverage
ggplot(medicare, aes(x=totexp)) + geom_histogram() + geom_histogram(bins = 100) + xlim(0, 100000) + ylim(0, 20000) + ggtitle("Medicare Coverage")
# View distribution of out-of-pocket medical spending for spending before Medicare coverage
ggplot(no_medicare, aes(x=totexp)) + geom_histogram() + geom_histogram(bins = 100) + xlim(0, 25000) + ylim(0, 100000) + ggtitle("No Medicare Coverage")
naive_ols <- lm(totexp ~ medicare + sex + educyr + racex + faminc, data = mydata, weights = perwt)
msummary(naive_ols)
attach(mydata)
plotdata <- read.csv("Dataframe_for_Question3c")
# Look at distribution of coefficients
plotdata %>%ggplot(aes(x=mytau)) +
geom_point(aes(y=coefs),size=2,color='blue') +
geom_errorbar(aes(ymin = lb, ymax = ub),width=0.03) +
scale_y_continuous(labels=scales::dollar_format()) +
scale_x_binned(n.breaks = 20, limits = c(0.05, 1.00)) +
theme_classic() + labs(x="Quantile", y="Estimated Marginal Effect of Medicare Enrolment on Health Spending")
# Look at distribution of coefficients
plotdata %>%ggplot(aes(x=mytau)) +
geom_point(aes(y=coefs),size=2,color='blue') +
geom_errorbar(aes(ymin = lb, ymax = ub),width=0.03) +
scale_y_continuous(labels=scales::dollar_format()) +
scale_x_binned(n.breaks = 20, limits = c(0.05, 1.00)) +
theme_classic() + labs(x="Quantile", y="Estimated Marginal Effect of Medicare Enrolment on Health Spending")
# Construct a figure of coefficients across distribution
myquants <- quantile(mydata$totexp,probs=c(0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75,
0.8, 0.85, 0.9, 0.95, 0.1), na.rm=TRUE)
plotdata %>% mutate(coefs = coefs / myquants,
lb = lb / myquants,
ub = ub / myquants) %>%
ggplot(aes(x=mytau))+
geom_point(aes(y=coefs),size=2,color='blue') +
geom_errorbar(aes(ymin = lb, ymax = ub),width=0.03) +
geom_hline(yintercept=1,color='red',linetype='dashed') +
theme_classic() + labs(x="Quantile", y="Estimated Marginal Effect of Medicare Enrolment on Health Spending")
theme_classic() + labs(x="Quantile", y="Estimated Marginal Effect of Medicare Enrolment on Health Spending")
# Construct a figure of coefficients across distribution
myquants <- quantile(mydata$totexp,probs=c(0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75,
0.8, 0.85, 0.9, 0.95, 0.1), na.rm=TRUE)
plotdata %>% mutate(coefs = coefs / myquants,
lb = lb / myquants,
ub = ub / myquants) %>%
ggplot(aes(x=mytau))+
geom_point(aes(y=coefs),size=2,color='blue') +
geom_errorbar(aes(ymin = lb, ymax = ub),width=0.03) +
geom_hline(yintercept=1,color='red',linetype='dashed') + ylim(-50, 200)
theme_classic() + labs(x="Quantile", y="Estimated Marginal Effect of Medicare Enrolment on Health Spending")
plotdata %>% mutate(coefs = coefs / myquants,
lb = lb / myquants,
ub = ub / myquants) %>%
ggplot(aes(x=mytau))+
geom_point(aes(y=coefs),size=2,color='blue') +
geom_errorbar(aes(ymin = lb, ymax = ub),width=0.03) +
geom_hline(yintercept=1,color='red',linetype='dashed') +
theme_classic() + labs(x="Quantile", y="Estimated Marginal Effect of Medicare Enrolment on Health Spending")
+ ylim(0, 100000)
plotdata %>% mutate(coefs = coefs / myquants,
lb = lb / myquants,
ub = ub / myquants) %>%
ggplot(aes(x=mytau))+
geom_point(aes(y=coefs),size=2,color='blue') +
geom_errorbar(aes(ymin = lb, ymax = ub),width=0.03) +
geom_hline(yintercept=1,color='red',linetype='dashed') +
theme_classic() +
labs(x="Quantile", y="Estimated Marginal Effect of Medicare Enrolment on Health Spending")
geom_errorbar(aes(ymin = lb, ymax = ub),width=0.03) +
geom_hline(yintercept=1,color='red',linetype='dashed') +
theme_classic() +
labs(x="Quantile", y="Estimated Marginal Effect of Medicare Enrolment on Health Spending")
plotdata %>% mutate(coefs = coefs / myquants,
lb = lb / myquants,
ub = ub / myquants) %>%
ggplot(aes(x=mytau))+
geom_point(aes(y=coefs),size=2,color='blue') +
geom_errorbar(aes(ymin = lb, ymax = ub),width=0.03) +
geom_hline(yintercept=1,color='red',linetype='dashed') +
theme_classic() +
labs(x="Quantile", y="Estimated Marginal Effect of Medicare Enrolment on Health Spending")
library(binsreg) # For binscatters
library(nprobust) # Local linear regression
# Check this site for helpful coding tips for nonparametric techniques: https://nppackages.github.io/
# Binscatter: relationship between income and spending
mydata%>% ggplot(aes(x=faminc ,y=totexp)) +
geom_point() +
theme_classic() +
scale_y_continuous(labels=scales::dollar_format()) +
labs(x="faminc",y="Total Health Expenditures") # This is hard to interpret
# Omit missing observations on educyr
mydata <- mydata[!is.na(mydata$educyr), ]
# Let's bin the data more
binsreg(y=totexp,x=faminc,by=medicare,
w= ~ sex + educyr + factor(racex),
weights = perwt,
data=mydata,
plotxrange = c(0, 250000),
line=c(3,3)) # If we want any confidence intervals on points
#create column new_date to change the date variable into dates
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
assign_data$new_date <- ymd(assign_data$date)
class(assign_data$new_date)
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) + ggtitle("Interest in Food Types Over Time")
hq1_line_graph
# Look at plot at pre-treatment, to gauge trend lines and similarities or differences:
hq1_line_graph + coord_cartesian(xlim= c(0,76))
#we can see before the start of the pandemic sourdough looked similar to cereal but did not look anything like soup or sandwich so considering droping thos
#create column new_date to change the date variable into dates
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
assign_data$new_date <- ymd(assign_data$date)
class(assign_data$new_date)
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) + ggtitle("Interest in Food Types Over Time")
hq1_line_graph
# Look at plot at pre-treatment, to gauge trend lines and similarities or differences:
hq1_line_graph + coord_cartesian(xlim= c(0,76))
#we can see before the start of the pandemic sourdough looked similar to cereal but did not look anything like soup or sandwich so considering droping thos
assign_data$date = as.Date(assign_data$date)
prior_trends_data <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0),
interaction = ifelse(keyword == "sourdough",date,0))
prior_trends_data <- prior_trends_data %>% filter(date < "2020-03-15")
prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_data)
msummary(list("all_controls" = prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
prior_trends_test_droppedcontrols <- regdata %>% filter(keyword %in% c("sourdough","cereal"))
new_prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_test_droppedcontrols)
msummary(list("dropped_controls"=new_prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
assign_data$date = as.Date(assign_data$date)
prior_trends_data <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0),
interaction = ifelse(keyword == "sourdough",date,0))
prior_trends_data <- prior_trends_data %>% filter(date < "2020-03-15")
prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_data)
msummary(list("all_controls" = prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
prior_trends_test_droppedcontrols <- regdata %>% filter(keyword %in% c("sourdough","cereal"))
new_prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_test_droppedcontrols)
msummary(list("dropped_controls"=new_prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
assign_data$date = as.Date(assign_data$date)
prior_trends_data <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0),
interaction = ifelse(keyword == "sourdough",date,0))
prior_trends_data <- prior_trends_data %>% filter(date < "2020-03-15")
prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_data)
msummary(list("all_controls" = prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
prior_trends_test_droppedcontrols <- regdata %>% filter(keyword %in% c("sourdough","cereal"))
new_prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_test_droppedcontrols)
msummary(list("dropped_controls"=new_prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
msummary(list("all_controls" = prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
msummary(list("dropped_controls"=new_prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
assign_data$date = as.Date(assign_data$date)
prior_trends_test_droppedcontrols <- regdata %>% filter(keyword %in% c("sourdough","cereal"))
new_prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_test_droppedcontrols)
msummary(list("dropped_controls"=new_prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
assign_data$date = as.Date(assign_data$date)
prior_trends_data <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0),
interaction = ifelse(keyword == "sourdough",date,0))
prior_trends_data <- prior_trends_data %>% filter(date < "2020-03-15")
prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_data)
msummary(list("all_controls" = prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
assign_data$date = as.Date(assign_data$date)
prior_trends_test_droppedcontrols <- regdata %>% filter(keyword %in% c("sourdough","cereal"))
new_prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_test_droppedcontrols)
msummary(list("dropped_controls"=new_prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
assign_data$date = as.Date(assign_data$date)
prior_trends_data <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0),
interaction = ifelse(keyword == "sourdough",date,0))
prior_trends_data <- prior_trends_data %>% filter(date < "2020-03-15")
prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_data)
msummary(list("all_controls" = prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
prior_trends_test_droppedcontrols <- regdata %>% filter(keyword %in% c("sourdough","cereal"))
new_prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_test_droppedcontrols)
msummary(list("dropped_controls"=new_prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(ggtext)
library(showtext)
library(stringr)
library(fastDummies)
library(modelsummary)
library(lubridate)
library(gtsummary)
library(fixest)
library(quantreg)
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
#create column new_date to change the date variable into dates
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
assign_data$new_date <- ymd(assign_data$date)
class(assign_data$new_date)
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) + ggtitle("Interest in Food Types Over Time")
hq1_line_graph
# Look at plot at pre-treatment, to gauge trend lines and similarities or differences:
hq1_line_graph + coord_cartesian(xlim= c(0,76))
#we can see before the start of the pandemic sourdough looked similar to cereal but did not look anything like soup or sandwich so considering droping thos
assign_data$date = as.Date(assign_data$date)
prior_trends_data <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0),
interaction = ifelse(keyword == "sourdough",date,0))
prior_trends_data <- prior_trends_data %>% filter(date < "2020-03-15")
prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_data)
msummary(list("all_controls" = prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
prior_trends_test_droppedcontrols <- regdata %>% filter(keyword %in% c("sourdough","cereal"))
new_prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_test_droppedcontrols)
msummary(list("dropped_controls"=new_prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
assign_data$date = as.Date(assign_data$date)
prior_trends_data <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0),
interaction = ifelse(keyword == "sourdough",date,0))
prior_trends_data <- prior_trends_data %>% filter(date < "2020-03-15")
prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_data)
msummary(list("all_controls" = prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
prior_trends_test_droppedcontrols <- regdata %>% filter(keyword %in% c("sourdough","cereal"))
new_prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_test_droppedcontrols)
msummary(list("dropped_controls"=new_prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
assign_data$date = as.Date(assign_data$date)
prior_trends_data <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0),
interaction = ifelse(keyword == "sourdough",date,0))
prior_trends_data <- prior_trends_data %>% filter(date < "2020-03-15")
prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_data)
msummary(list("all_controls" = prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
prior_trends_test_droppedcontrols <- assign_data %>% filter(keyword %in% c("sourdough","cereal"))
new_prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_test_droppedcontrols)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(ggtext)
library(showtext)
library(stringr)
library(fastDummies)
library(modelsummary)
library(lubridate)
library(gtsummary)
library(fixest)
library(quantreg)
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
#create column new_date to change the date variable into dates
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
assign_data$new_date <- ymd(assign_data$date)
class(assign_data$new_date)
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) + ggtitle("Interest in Food Types Over Time")
hq1_line_graph
# Look at plot at pre-treatment, to gauge trend lines and similarities or differences:
hq1_line_graph + coord_cartesian(xlim= c(0,76))
#we can see before the start of the pandemic sourdough looked similar to cereal but did not look anything like soup or sandwich so considering droping thos
assign_data$date = as.Date(assign_data$date)
prior_trends_data <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0),
interaction = ifelse(keyword == "sourdough",date,0))
prior_trends_data <- prior_trends_data %>% filter(date < "2020-03-15")
prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_data)
msummary(list("all_controls" = prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
prior_trends_test_droppedcontrols <- assign_data %>% filter(keyword %in% c("sourdough","cereal"))
new_prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_test_droppedcontrols)
assign_data$date = as.Date(assign_data$date)
prior_trends_data <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0),
interaction = ifelse(keyword == "sourdough",date,0))
prior_trends_data <- prior_trends_data %>% filter(date < "2020-03-15")
prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_data)
msummary(list("all_controls" = prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
prior_trends_test_droppedcontrols <- prior_trends_data %>% filter(keyword %in% c("sourdough","cereal"))
new_prior_trends_test<- lm(hits ~ date + interaction, data=prior_trends_test_droppedcontrols)
msummary(list("dropped_controls"=new_prior_trends_test), vcov=c(rep("robust",1)), fmt = "%#.5f",
stars=c('*' = .1, '**' = .05, '***' = .01))
# Create Treated Variable for sourdough https://www.princeton.edu/~otorres/DID101R.pdf
regdata <- assign_data %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0))
# Create a dummy variable to indicate the time when the treatment started.
regdata <- regdata %>% mutate(pandemic_begun = ifelse(date >= "2020-03-15", 1, 0))
new_regdata <- regdata %>% filter(keyword %in% c("sourdough","cereal"))
new_regdata <- new_regdata %>% mutate(interaction = treated*pandemic_begun)
#create a relative_month variable by shifting the "date" variable back 15 days (so that the treatment day is the first day of the month)  and then taking the month of the resulting date
new_regdata <- new_regdata %>% mutate(relative_month = new_date - 14)
#shift date back 14 days, used new_date instead of date as date is a character while new date is the class date
# I used 14 so that the treatment day is may 1 rather than February 29
#create an "After" variable equal to 1/0 or True/False if the date is March 15 or afterwards
new_regdata <- new_regdata %>% mutate(After = ifelse(relative_month >= "2020-03-15", 1, 0 ))
#illustrate how the values of "relative_month" line up with "date" and subtract a number from "relative_month" so the last period just before treatment (Feb 16 - Mar 14)  is 0. (Also, change the Jan 1 -14 month so it's one less than the Jan 15- Feb 14 month)
relative_month_date_illustration <- new_regdata %>% select(relative_month, new_date)
#table with relative month and new date next to each other
relative_month_date_illustration <- relative_month_date_illustration %>% mutate(diff_bt_date = difftime(new_date, relative_month, units = "days"))
plot(relative_month_date_illustration$diff_bt_date)
q_c_table <- tibble(relative_month_date_illustration)
#Use two-way fixed effects to estimate the difference-in-difference estimate of the effect of lockdown on sourdough popularity. What are your two fixed effects?
fixed_effects_model <- feols(hits ~ interaction | pandemic_begun + treated, data = new_regdata)
fixed_effects_model
#report and interpert results, with standard errors clustered at keyword level
msummary(fixed_effects_model, vcov= ~keyword, fmt = '%#.14f') #is this how you cluster by keyword level haha
name <- Sys.info()
name[7]
here()
load("/Users/husaynjessa/Documents/GitHub/HAD5744/Assignment 3/a3_p3_medicare.RData")
# Construct Medicare coverage variable (1 = covered; 0 = not covered)
mydata <- mydata %>% mutate(medicare = ifelse(agex >= 65, 1, 0))
medicare <- mydata[mydata$medicare == 1, ]
no_medicare <- mydata[mydata$medicare == 0, ]
ggplot(mydata, aes(x = (agex > 65), y = totexp)) + geom_point() #this also demonstrates not having medicare increases total expenditure
# View distribution of out-of-pocket medical spending for spending after Medicare coverage
ggplot(medicare, aes(x=totexp)) + geom_histogram() + geom_histogram(bins = 100) + xlim(0, 100000) + ylim(0, 20000) + ggtitle("Medicare Coverage")
# View distribution of out-of-pocket medical spending for spending before Medicare coverage
ggplot(no_medicare, aes(x=totexp)) + geom_histogram() + geom_histogram(bins = 100) + xlim(0, 25000) + ylim(0, 100000) + ggtitle("No Medicare Coverage")
naive_ols <- lm(totexp ~ medicare + sex + educyr + racex + faminc, data = mydata, weights = perwt)
msummary(naive_ols)
attach(mydata)
plotdata <- read.csv("Dataframe_for_Question3c")
# Look at distribution of coefficients
plotdata %>%ggplot(aes(x=mytau)) +
geom_point(aes(y=coefs),size=2,color='blue') +
geom_errorbar(aes(ymin = lb, ymax = ub),width=0.03) +
scale_y_continuous(labels=scales::dollar_format()) +
scale_x_binned(n.breaks = 20, limits = c(0.05, 1.00)) +
theme_classic() + labs(x="Quantile", y="Estimated Marginal Effect of Medicare Enrolment on Health Spending")
# Construct a figure of coefficients across distribution
myquants <- quantile(mydata$totexp,probs=c(0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75,
0.8, 0.85, 0.9, 0.95, 0.1), na.rm=TRUE)
plotdata %>% mutate(coefs = coefs / myquants,
lb = lb / myquants,
ub = ub / myquants) %>%
ggplot(aes(x=mytau))+
geom_point(aes(y=coefs),size=2,color='blue') +
geom_errorbar(aes(ymin = lb, ymax = ub),width=0.03) +
geom_hline(yintercept=1,color='red',linetype='dashed') +
theme_classic() +
labs(x="Quantile", y="Estimated Marginal Effect of Medicare Enrolment on Health Spending")
library(binsreg) # For binscatters
library(nprobust) # Local linear regression
# Check this site for helpful coding tips for nonparametric techniques: https://nppackages.github.io/
# Binscatter: relationship between income and spending
mydata%>% ggplot(aes(x=faminc ,y=totexp)) +
geom_point() +
theme_classic() +
scale_y_continuous(labels=scales::dollar_format()) +
labs(x="faminc",y="Total Health Expenditures") # This is hard to interpret
# Omit missing observations on educyr
mydata <- mydata[!is.na(mydata$educyr), ]
# Let's bin the data more
binsreg(y=totexp,x=faminc,by=medicare,
w= ~ sex + educyr + factor(racex),
weights = perwt,
data=mydata,
plotxrange = c(0, 250000),
line=c(3,3)) # If we want any confidence intervals on points
