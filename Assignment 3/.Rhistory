"2020-07-01",
"2020-08-01"), labels = waiver())
q1_line_graph
q1_line_graph
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(ggtext)
library(showtext)
library(stringr)
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
View(assign_data)
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
assign_data$date <- as.factor(assign_data$date)
assign_data$date <- as.numeric(assign_data$date)
View(assign_data)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(ggtext)
library(showtext)
library(stringr)
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
1_line_graph <- ggplot(assign_data, (aes(x = date, y = hits, group = keyword))) +
q1_line_graph <- ggplot(assign_data, (aes(x = date, y = hits, group = keyword))) +
geom_line(aes(color = keyword)) + theme_linedraw() + labs(x = "Date", y = "Hits") +
geom_vline(xintercept = as.numeric(assign_data$date[75]),
color = "red") + geom_text(aes(x = as.numeric(date[120]), label="Start of Pandemic (2020-03-15)", y=90), color = "red") +
scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"), labels = waiver())
q1_line_graph
View(assign_data)
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
assign_data$date <- as.factor(assign_data$date)
View(assign_data)
q1_line_graph <- ggplot(assign_data, (aes(x = date, y = hits, group = keyword))) +
geom_line(aes(color = keyword)) + theme_linedraw() + labs(x = "Date", y = "Hits") +
geom_vline(xintercept = 2020-03-15),
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(ggtext)
library(showtext)
library(stringr)
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
ggplot(assign_data,aes(x=date,y=hits ,group=keyword)) + geom_line() +
theme_classic() + labs(x="Date",y="Hits")
ggplot(assign_data,aes(x=date,y=hits ,group=keyword)) + geom_line(aes(colour=variable)) +
theme_classic() + labs(x="Date",y="Hits")
ggplot(assign_data,aes(x=date,y=hits ,group=keyword)) + geom_line(aes(colour=variable)) +
theme_classic() + labs(x="Date",y="Hits")
ggplot(assign_data,aes(x=date,y=hits ,group=keyword)) + geom_line(aes(colour=red)) +
theme_classic() + labs(x="Date",y="Hits")
ggplot(assign_data,aes(x=date,y=hits ,group=keyword)) + geom_line() +
theme_classic() + labs(x="Date",y="Hits")
theme_classic() + labs(x="Date",y="Hits")
ggplot(assign_data,aes(x=date,y=hits ,group=keyword)) + geom_line(aes(colour=variable) +
theme_classic() + labs(x="Date",y="Hits")
theme_classic() + labs(x="Date",y="Hits")
q1_h_line_graph <- ggplot(assign_data,aes(x=date,y=hits ,group=keyword)) + geom_line(aes(colour=variable) +
theme_classic() +
labs(x="Date",y="Hits")
q1_h_line_graph
ggplot(assign_data,aes(x=date,y=hits ,group=keyword)) + theme_classic() + labs(x="Date",y="Hits")
+ geom_line()
ggplot(assign_data,aes(x=date,y=hits ,group=keyword)) + theme_classic() + labs(x="Date",y="Hits") + geom_line()
ggplot(assign_data,aes(x=date,y=hits ,group=keyword, colour = variable)) + theme_classic() + labs(x="Date",y="Hits") + geom_line()
q1_line_graph <- ggplot(assign_data, (aes(x = date, y = hits, group = keyword))) +
geom_line(aes(color = keyword)) + theme_linedraw() + labs(x = "Date", y = "Hits") +
geom_vline(xintercept = as.numeric(assign_data$date[75]),
color = "red") + geom_text(aes(x = as.numeric(date[120]), label="Start of Pandemic (2020-03-15)", y=90), color = "red") +
scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"), labels = waiver())
q1_line_graph
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic() + geom_line()
View(assign_data)
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic() + geom_vline(xintercept= 2020-03-15T00:00:00Z
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic() + geom_vline(xintercept= 2020-03-15 T00:00:00Z
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic() + geom_vline(xintercept= 75
,lwd=2, colour= "red") + geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic() + geom_vline(xintercept= 5
,lwd=2, colour= "red") + geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic() + geom_vline(xintercept= 2020-03-15,lwd=2, colour= "red") + geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic() + geom_vline(xintercept= ,lwd=2, colour= "red") + geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) + geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
annotate("text", x=assign_data$date, label="Start of Pandemic", angle=90) +geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
annotate("text", x=assign_data$date, y = 20, label="Start of Pandemic", angle=90) +geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
annotate("text", x=assign_data$date, y = 0, label="Start of Pandemic", angle=90) +geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
+geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
+geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +geom_line()
+ geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
geom_text(aes(x=assign_data$date[75], label="start of the pandemic", y=20), colour="black", angle=90, text=element_text(size=11)) + geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
geom_text(aes(x=date[75], label="start of the pandemic", y=20), colour="black", angle=90, text=element_text(size=11)) + geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
geom_text(aes(x=date[75], label="start of the pandemic", y=20), colour="black", angle=90) + geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
geom_text(aes(x=date[75], label="start of the pandemic", y=10), colour="black", angle=90) + geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
geom_text(aes(x=date[75], label="start of the pandemic", y=30), colour="black", angle=90) + geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
geom_text(aes(x=date[75], label="start of the pandemic", y=30, nudge_x = -0.5 ), colour="black", angle=90) + geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
geom_text(aes(x=date[75], label="start of the pandemic", y=30, nudge_x = -1 ), colour="black", angle=90) + geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
geom_text(aes(x=date[75], label="\start of the pandemic", y=30, nudge_x = -1 ), colour="black", angle=90) + geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
geom_text(aes(x=date[75], label="start of the pandemic", y=30, nudge_x = -1 ), colour="black", angle=90) + geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
geom_text(aes(x=date[75], label="start of the pandemic", y=30, nudge_x = -1 ), colour="black") + geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
geom_text(aes(x=date[75], label="start of the pandemic", y=30, angle = 90, check_overlap=TRUE), colour="black") + geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
geom_text(aes(x=date[75], label="start of the pandemic", y=30, angle = 90, check_overlap= FALSE), colour="black") + geom_line()
q1_line_graph <- ggplot(assign_data, (aes(x = date, y = hits, group = keyword))) +
geom_line(aes(color = keyword)) + theme_linedraw() + labs(x = "Date", y = "Hits") +
geom_vline(xintercept = as.numeric(assign_data$date[75]),
color = "red") + geom_text(aes(x = as.numeric(date[120]), label="Start of Pandemic (2020-03-15)", y=90), color = "red") +
scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
q1_line_graph
q1_line_graph
q1_line_graph <- ggplot(assign_data, (aes(x = date, y = hits, group = keyword))) +
geom_line(aes(color = keyword)) + theme_linedraw() + labs(x = "Date", y = "Hits") +
geom_vline(xintercept = as.numeric(assign_data$date[75]),
color = "red") + geom_text(aes(x = as.numeric(date[120]), label="Start of Pandemic (2020-03-15)", y=90), color = "red") +
scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"), labels = waiver())
q1_line_graph
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
geom_text(aes(x=date[76], label="start of the pandemic", y=30, angle = 90, colour="black") + geom_line()
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
geom_text(aes(x=date[76], label="start of the pandemic", y=30, angle = 90, colour="black") + geom_line()
+ geom_line()
hj_line_graph
hj_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
geom_text(aes(x=date[76], label="start of the pandemic", y=30, angle = 90, colour="black")
+ geom_line()
hj_line_graph
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
geom_text(aes(x=date[76], label="start of the pandemic", y=30, angle = 90, colour="black")
+ geom_line()
hj_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
geom_text(aes(x=date[75], label="start of the pandemic", y=30, angle = 90, colour="black")
+ geom_line()
+ geom_line()
+ geom_line()
hq1_line_graph
+ geom_line()
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
geom_text(aes(x=date[75], label="start of the pandemic", y=30, angle = 90, colour="black")) + geom_line()
hq1_line_graph
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
geom_text(aes(x=date[76], label="start of the pandemic", y=30, angle = 90, colour="black")) + geom_line()
hq1_line_graph
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) +
+ geom_line()
<- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75]) + geom_line()
hq1_line_graph
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) +
geom_text(mapping = aes(x = date[75],
y = 0,
label = "Start of the Pandemic",
hjust = -1,
vjust = -1)
+ geom_line()
hq1_line_graph
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + geom_line
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + geom_line()
hq1_line_graph
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + geom_line() + geom_tex(aes(x= assign_data$date[75]), label = "Start of Pandemic (2020-03-15)", y = 90)
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + geom_line() + geom_text(aes(x= assign_data$date[75]), label = "Start of Pandemic (2020-03-15)", y = 90)
hq1_line_graph
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + geom_line()
hq1_line_graph
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=date[75], y=90, label="Start of Pandemic", angle=90) + geom_line()
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[75], y=90, label="Start of Pandemic", angle=90) + geom_line()
hq1_line_graph
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[76], y=90, label="Start of Pandemic", angle=90) + geom_line()
hq1_line_graph
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[73], y=85, label="Start of Pandemic", angle=90) + geom_line()
hq1_line_graph
hq1_line_graph
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic", angle=90) + geom_line()
hq1_line_graph
library(here)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(ggtext)
library(showtext)
library(stringr)
name <- Sys.info()
name[7]
assign_data <- read.csv("a3_p1_sourdough_trends.csv")
assign_data$date <- str_replace_all(assign_data$date, "T00:00:00Z", "")
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic", angle=90) + geom_line()
hq1_line_graph
hq1_line_graph
library(fastDummies)
assign_data <- dummy_cols(assign_data, select_columns = 'keyword')
View(assign_data)
knitr::opts_chunk$set(echo = TRUE)
################################################################################
# I like to include several additional notes in the header of my files here:
#
# Last modified: 8/12/2022
#
### PURPOSE:
# Lecture 9 code and output file
#
### NOTES:
# - uses the Tidyverse package and Dplyr
################################################################################
### 0. Load the packages we will need for this file ####
library(tidyverse) # load the installed package for each new session of R
library(broom)
library(readxl) # Read in data
library(modelsummary) # For making regression tables
library(causaldata) # Useful toy data sets
library(here) # Helpful in working with directories and projects
library(AER) # this package has lots of applied metrics packages
# Look at two similar states: Ohio (vaccine lottery started June 2021) and Michigan
ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)
# Look at two similar foods: Sourdough and Cereal
ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)
# Look at two similar foods: Sourdough and Cereal
ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic", angle=90) + geom_line()
# Look at two similar foods: Sourdough and Cereal
ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=70, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line()
# Look at two similar foods: Sourdough and Cereal
ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=30, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line()
# Look at two similar foods: Sourdough and Cereal
ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=5, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line()
# Look at two similar foods: Sourdough and Cereal
ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line()
"2020-08-01")
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
hq1_line_graph
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
# Look at two similar foods: Sourdough and Cereal
ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
hq1_line_graph
# Look at two similar foods: Sourdough and Cereal
sourdough_plot <- ggplot(assign_data[which(assign_data$keyword=="sourdough"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
cereal_plot <- ggplot(assign_data[which(assign_data$keyword=="cereal"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
cereal_plot
sandwich_plot <- ggplot(assign_data[which(assign_data$keyword=="sandwich"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
soup_plot <- ggplot(assign_data[which(assign_data$keyword=="soup"),],aes(x=date,y=hits,group=keyword, colour = keyword)) + geom_line() +
theme_classic() + labs(x="Time",y="Hits") +
geom_vline(xintercept = assign_data$date[75], show.legend = FALSE)  + annotate("text", x=assign_data$date[70], y=15, label="Start of Pandemic (2020-03-15)", angle=90) + geom_line() +scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01"))
soup_plot
sandwich_plot
sourdough_plot
# Regression data -- just ohio and michigan
regdata <- assign_data %>% filter(keyword %in% c("sourdough","cereal"))
# Definition of key variables
regdata <- regdata %>% mutate(treated = ifelse(location == "sourdough", 1, 0),
interaction = ifelse(location == "sourdough",date,0))
# Definition of key variables
regdata <- regdata %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0),
interaction = ifelse(keyword == "sourdough",date,0))
# Statistical tests: are the two groups' trends different?
pretrend_test <- lm(hits ~ date + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
View(sandwich_plot)
View(sandwich_plot)
view(cereal_plot,sandwich_plot,soup_plot,sourdough_plot)
cereal_plot,sandwich_plot,soup_plot,sourdough_plot
c(cereal_plot,sandwich_plot,soup_plot,sourdough_plot)
cereal_plot
sandwich_plot
sourdough_plot
soup_plot
sourdough_plot
sandwich_plot
soup_plot
cereal_plot
assign_data <- assign_data %>% mutate(pandemic_begins = (date >= assign_data$date[75]),
treated_group = keyword %in% "sourdough",
interaction = pandemic_begins*treated_group)
#descriptive stats
count(assign_data, pandemic_begins, treated_group, interaction)
reg_data <- assign_data %>% mutate(pandemic_begins = (date >= assign_data$date[75]),
treated_group = keyword %in% "sourdough",
interaction = pandemic_begins*treated_group)
hq1_line_graph <- ggplot(assign_data, aes(x = date, y = hits, colour = keyword, group = keyword)) +
theme_classic()  + geom_vline(xintercept = assign_data$date[75], show.legend = FALSE) + annotate("text", x=assign_data$date[70], y=86, label="Start of Pandemic ", angle=90) + geom_line() +  scale_x_discrete(breaks = c("2020-01-01",
"2020-02-01",
"2020-03-01",
"2020-04-01",
"2020-05-01",
"2020-06-01",
"2020-07-01",
"2020-08-01")) + ggtitle("Interest in Food Types Over Time")
hq1_line_graph
# Definition of key variables
regdata <- assign_data %>% mutate(treated = (keword == "sourdough")
post = (date >= assign_data$date[75]),
# Definition of key variables
regdata <- assign_data %>% mutate(treated = (keword == "sourdough"),
post = (date >= assign_data$date[75]),
interaction = treated*post))
# Definition of key variables
regdata <- assign_data %>% mutate(treated = (keword == "sourdough"),
post = (date >= assign_data$date[75]),
interaction = treated*post)
pretrend_test <- lm(hits ~ date + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
pretrend_test <- lm(hits ~ treated + post + interaction, data=regdata)
pretrend_test <- lm(hits ~ treated + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
regdata <- mydata %>% filter(keyword %in% c("sourdough","cereal"))
(keyword %in% c("sourdough","cereal"))
regdata <- assign_data %>% filter(keyword %in% c("sourdough","cereal"))
regdata <- regdata %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0),
interaction = ifelse(keyword == "sourdough",date,0))
pretrend_test <- lm(hits ~ date + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
regdata <- regdata %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0),
interaction = ifelse(keyword == "sourdough",date,0))
View(assign_data)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
pretrend_test <- lm(hits ~ keyword + interaction, data=regdata)
msummary(list(pretrend_test),
vcov=c(rep("robust",1)),
stars=c('*' = .1, '**' = .05, '***' = .01)) # Interpret each coefficient here
regdata <- regdata %>% mutate(treated = ifelse(keyword == "sourdough", 1, 0),
interaction = ifelse(keyword == "sourdough",date >= 2020-03-150))
