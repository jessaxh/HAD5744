library(vtable)
vtable(Dataset1)
# Visually, look and see how well the observations fit the linear model
vtable(Dataset1)
attach(Dataset1)
hist(GDPPCUS2005)
hist(log(GDPPCUS2005))
hist(HXPC2005)
hist(log(HXPC2005))
ggplot(Dataset1, aes(x = HXPC2005, y = LEBF20052)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
ggplot(Dataset1, aes(x = GDPPCUS2005, y = LEBF20052)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
Dataset1$continent <- countrycode(sourcevar = Dataset1[,"Country"],
origin = "country.name",
destination = "continent")
view(Dataset1)
unique(Dataset1[c("continent")])
Dataset1 <- dummy_cols(Dataset1, select_columns = "continent") #used fast dummies to make dummy variables
continet_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005) + continent_Africa +
continent_Americas + continent_Asia + continent_Europe
+ continent_Oceania, Dataset1)
Regression_table4 <- msummary(continet_regression,
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = 5)
Regression_table4
interaction_regression <- lm(LEBF20052~log(HXPC2005)
+log(GDPPCUS2005)
+ continent_Africa
+ continent_Americas
+ continent_Asia
+ continent_Europe
+ continent_Oceania
+ log(HXPC2005):continent_Africa, Dataset1)
Regression_table5 <- msummary(interaction_regression,
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = 5)
Regression_table5
first_regression <- lm(LEBF20052~HXPC2005, Dataset1)
Regression_table1 <- msummary(first_regression, fmt = "%.4f",
stars=c('*' = .1, '**' = .05, '***' = .01),
statistic = c("conf.int",  "standard error = {std.error}",
"p-value = {p.value}")
)
Regression_table1
first_regression <- lm(LEBF20052~HXPC2005, Dataset1)
Regression_table1 <- msummary(first_regression, fmt = "%.4f",
stars=c('*' = .1, '**' = .05, '***' = .01),
statistic = c("conf.int",  "standard error = {std.error}",
"p-value = {p.value}")
)
Regression_table1
second_regression <- lm(LEBF20052~HXPC2005+GDPPCUS2005, Dataset1)
Regression_table2 <- msummary(list(first_regression,second_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = "%.4f",  statistic = c("conf.int",  "standard error
={std.error}",
"p-value = {p.value}"))
Regression_table2
third_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005), Dataset1)
Regression_table3 <- msummary(list(second_regression, third_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = "%.4f",  statistic = c("conf.int",  "standard error
={std.error}",
"p-value = {p.value}"))
Regression_table3
Dataset1$continent <- countrycode(sourcevar = Dataset1[,"Country"],
origin = "country.name",
destination = "continent")
view(Dataset1)
unique(Dataset1[c("continent")])
Dataset1 <- dummy_cols(Dataset1, select_columns = "continent") #used fast dummies to make dummy variables
continet_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005) + continent_Africa +
continent_Americas + continent_Asia + continent_Europe
+ continent_Oceania, Dataset1,  statistic = c("conf.int",  "standard
error = {std.error}",
"p-value = {p.value}"))
#all dummy variables are in the regression - to let R decide which one to drop
Regression_table4 <- msummary(continet_regression,
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = 5)
Regression_table4
continet_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005) + continent_Africa +
continent_Americas + continent_Asia + continent_Europe
+ continent_Oceania, Dataset1,  statistic = c("conf.int",  "standard
error = {std.error}",
"p-value = {p.value}"))
continet_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005) + continent_Africa +
continent_Americas + continent_Asia + continent_Europe
+ continent_Oceania, Dataset1)
Regression_table4 <- msummary(continet_regression,
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = 5,  statistic = c("conf.int",  "standard error = {std.error}",
"p-value = {p.value}"))
Regression_table4
interaction_regression <- lm(LEBF20052~log(HXPC2005)
+log(GDPPCUS2005)
+ continent_Africa
+ continent_Americas
+ continent_Asia
+ continent_Europe
+ continent_Oceania
+ log(HXPC2005):continent_Africa, Dataset1)
Regression_table5 <- msummary(interaction_regression,
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = 5,  statistic = c("conf.int",
"standard error = {std.error}",
"p-value = {p.value}"))
Regression_table5
Regression_table5
q.9_table <- msummary(list(q.9_regression.1, q.9_regression.2, third_regression), fmt = "%.4f",
stars=c('*' = .1, '**' = .05, '***' = .01),  statistic = c("conf.int",
"standard error =
{std.error}",
"p-value = {p.value}"))
q.9_regression.1 <- lm(LEBF20052~log(GDPPCUS2005), Dataset1)
q.9_regression.2 <- lm(LEBF20052~log(HXPC2005), Dataset1)
q.9_table <- msummary(list(q.9_regression.1, q.9_regression.2, third_regression), fmt = "%.4f",
stars=c('*' = .1, '**' = .05, '***' = .01),  statistic = c("conf.int",
"standard error =
{std.error}",
"p-value = {p.value}"))
q.9_table
knitr::opts_chunk$set(echo = TRUE)
name <- Sys.info()
name[7]
### Load the packages we will need for this file ####
library(tidyverse) # load the installed package for each new session of R
library(broom) # helps for storing regression output
library(here) # for file organization
library(modelsummary) # For making regression tables
library(psych) # For creating summary statistics table
library(countrycode) # Used to get continents from countries
library(fastDummies) # To create dummy variables
library(vtable)
# enter file path identifiers
here("Desktop", "Graduate Studies", "4. Courses", "Fall 2022", "HAD5744H", "Assignments", "Assignment 1")
assign_data <- read.csv("Dataset 1.csv") # assign data to an object
name <- Sys.info()
name[7]
### Load the packages we will need for this file ####
library(tidyverse) # load the installed package for each new session of R
library(broom) # helps for storing regression output
library(here) # for file organization
library(modelsummary) # For making regression tables
library(psych) # For creating summary statistics table
library(countrycode) # Used to get continents from countries
library(fastDummies) # To create dummy variables
library(vtable)
# enter file path identifiers
here("Desktop", "Graduate Studies", "4. Courses", "Fall 2022", "HAD5744H", "Assignments", "Assignment 1")
assign_data <- read.csv("Dataset 1.csv") # assign data to an object
# Read in cleaned data
Dataset1 <- read.csv("Dataset 1_Clean.csv")
# Convert to numerics (aside from Country)
Dataset1[, 2:19] <- lapply(Dataset1[, 2:19], as.numeric)
describe(Dataset1)
summary_table <- describe(Dataset1[ ,c("LEBF20052","maxINFM20052","GDPPCUS2005", "HXPC2005","PctHXPUB2005",
"TotFertRate2005","AdolFertRt2005","FtoMPrimaryEnrl2005ONY",
"PctUrb2005", "Sanitation2005ONY","ImprWaterUrb2005ONY",
"ImpWatRur2005ONY", "FLFPR2005", "PctPop0142005", "PctPop65Pl2005")],
fast=TRUE)
summary_table <- summary_table[ ,-(1), drop = FALSE] #drop first column which corresponds to variable number in dataframe
summary_table
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # load the installed package for each new session of R
library(broom) # helps for storing regression output
library(here) # for file organization
library(modelsummary) # For making regression tables
library(psych) # For creating summary statistics table
library(countrycode) # Used to get continents from countries
library(fastDummies) # To create dummy variables
library(vtable)
# Read in cleaned data
Dataset1 <- read.csv("Dataset 1_Clean.csv")
# Convert to numerics (aside from Country)
Dataset1[, 2:19] <- lapply(Dataset1[, 2:19], as.numeric)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # load the installed package for each new session of R
library(broom) # helps for storing regression output
library(here) # for file organization
library(modelsummary) # For making regression tables
library(psych) # For creating summary statistics table
library(countrycode) # Used to get continents from countries
library(fastDummies) # To create dummy variables
library(vtable)
# Read in cleaned data
Dataset1 <- read.csv("Dataset 1_Clean.csv")
# Convert to numerics (aside from Country)
Dataset1[, 2:19] <- lapply(Dataset1[, 2:19], as.numeric)
third_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005), Dataset1)
Regression_table3 <- msummary(list(second_regression, third_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = "%.4f",  statistic = c("conf.int",  "standard error
={std.error}",
"p-value = {p.value}"))
first_regression <- lm(LEBF20052~HXPC2005, Dataset1)
Regression_table1 <- msummary(first_regression, fmt = "%.4f",
stars=c('*' = .1, '**' = .05, '***' = .01),
statistic = c("conf.int",  "standard error = {std.error}",
"p-value = {p.value}")
)
Regression_table1
second_regression <- lm(LEBF20052~HXPC2005+GDPPCUS2005, Dataset1)
Regression_table2 <- msummary(list(first_regression,second_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = "%.4f",  statistic = c("conf.int",  "standard error
={std.error}",
"p-value = {p.value}"))
Regression_table2
third_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005), Dataset1)
Regression_table3 <- msummary(list(second_regression, third_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = "%.4f",  statistic = c("conf.int",  "standard error
={std.error}",
"p-value = {p.value}"))
Regression_table3
# Plug the original data into the model and find fitted values and
# residuals/errors
fitted_data <- augment(third_regression, data = Dataset1)
# Plug the original data into the model and find fitted values and
# residuals/errors
tidy(third_regression, conf.int=TRUE)
fitted_data <- augment(third_regression, data = Dataset1)
# Look at relationship between fitted values and residuals
ggplot(fitted_data, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_smooth(method = "lm")
fitted_data <- augment(third_regression, data = Dataset1)
# Plug the original data into the model and find fitted values and
# residuals/errors
third_regression <- as.data.frame(third_regression)
tidy(third_regression, conf.int=TRUE)
fitted_data <- augment(third_regression, data = Dataset1)
# Plug the original data into the model and find fitted values and
# residuals/errors
tidy(third_regression, conf.int=TRUE)
fitted_data <- augment(third_regression, data = Dataset1)
third_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005), Dataset1)
# Plug the original data into the model and find fitted values and
# residuals/errors
tidy(third_regression, conf.int=TRUE)
fitted_data <- augment(third_regression, data = Dataset1)
fitted_data <- augment(third_regression, data = Dataset1)
q.9_regression.1 <- lm(LEBF20052~log(GDPPCUS2005), Dataset1)
q.9_regression.2 <- lm(LEBF20052~log(HXPC2005), Dataset1)
q.9_table <- msummary(list(q.9_regression.1, q.9_regression.2, third_regression), fmt = "%.4f",
stars=c('*' = .1, '**' = .05, '***' = .01),  statistic = c("conf.int",
"standard error =
{std.error}",
"p-value = {p.value}"))
#added pvalues
q.9_table
# Plug the original data into the model and find fitted values and
# residuals/errors
tidy(q.9_regression.1, conf.int=TRUE)
fitted_data <- augment(q.9_regression.1, data = Dataset1)
fitted_data <- augment(q.9_regression.1, data = Dataset1)
# Look at relationship between fitted values and residuals
ggplot(fitted_data, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_smooth(method = "lm")
# Plug the original data into the model and find fitted values and
# residuals/errors
tidy(third_regression, conf.int=TRUE)
fitted_data <- augment(third_regression, data = Dataset1)
# Plug the original data into the model and find fitted values and
# residuals/errors
tidy(third_regression, conf.int=TRUE)
fitted_data <- augment(third_regression, data = Dataset1)
par(mfrow = c(2, 2))
plot(third_regression)
library(lmtest)
install.packages(lmtest)
library(lmtest)
install.packages(lmtest)
install.packages("lmtest")
library(lmtest)
lmtest::bptest(third_regression)
par(mfrow = c(2, 2))
plot(third_regression)
car::ncvTest(third_regression)  # Breusch-Pagan test
bptest(third_regression)
plot(third_regression)
library(lmtest)
lmtest::bptest(model)
lmtest::bptest(third_regression)
lmtest::bptest(q.9_regression.1)
lmtest::bptest(q.9_regression.2)
lmtest::bptest(third_regression)
install.packages("skedastic")
library(skedastic)
skedastic:white_lm(third_regression)
library(skedastic)
skedastic:white_lm(third_regression)
skedastic::white_lm(third_regression)
lmtest::bptest(third_regression)
plot(third_regression)
coeftest(third_regression, vcov.=NeweyWest(model, lag=0, adjust=TRUE, verbose=TRUE))
install.packages("sandwich")
library(sandwich)
coeftest(third_regression, vcov.=NeweyWest(model, lag=0, adjust=TRUE, verbose=TRUE))
coeftest(third_regression, vcov.=NeweyWest(model, lag=0, adjust=TRUE, verbose=TRUE))
third_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005), Dataset1)
coeftest(third_regression, vcov.=NeweyWest(model, lag=0, adjust=TRUE, verbose=TRUE))
plot(third_regression)
library(AER); library(sandwich)
fixedse<- msummary( third_regression,
stars=c('*' = .1, '**' = .05, '***' = .01), vcov ="robust"
fmt = "%.4f")
fixedse<- msummary( third_regression,
stars=c('*' = .1, '**' = .05, '***' = .01), vcov ="robust",
fmt = "%.4f")
fixedse
fixedse<- msummary( third_regression,
stars=c('*' = .1, '**' = .05, '***' = .01), vcov ="Neweywest",
fmt = "%.4f")
fixedse
#test for autocorrelation
library(stats)
acf(third_regression$residuals, type = "correlation")
ac_test <- acf(third_regression$residuals, type = "correlation")
ac_test
plot(ac_test)
#test for autocorrelation
lmtest::dwtest(third_regression)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # load the installed package for each new session of R
library(broom) # helps for storing regression output
library(here) # for file organization
library(modelsummary) # For making regression tables
library(psych) # For creating summary statistics table
library(countrycode) # Used to get continents from countries
library(fastDummies) # To create dummy variables
library(vtable)
library(lmtest)
name <- Sys.info()
name[7]
# Read in cleaned data
Dataset1 <- read.csv("Dataset 1_Clean.csv")
# Convert to numerics (aside from Country)
Dataset1[, 2:19] <- lapply(Dataset1[, 2:19], as.numeric)
first_regression <- lm(LEBF20052~HXPC2005, Dataset1)
Regression_table1 <- msummary(first_regression, fmt = "%.4f",
stars=c('*' = .1, '**' = .05, '***' = .01),
statistic = c("conf.int",  "standard error = {std.error}",
"p-value = {p.value}")
)
Regression_table1
first_regression <- lm(LEBF20052~HXPC2005, Dataset1)
Regression_table1 <- msummary(list("reg1" = first_regression), fmt = "%.4f",
stars=c('*' = .1, '**' = .05, '***' = .01),
statistic = c("conf.int",  "standard error = {std.error}",
"p-value = {p.value}")
)
Regression_table1
first_regression <- lm(LEBF20052~HXPC2005, Dataset1)
Regression_table1 <- msummary(first_regression, fmt = "%.4f",
stars=c('*' = .1, '**' = .05, '***' = .01),
statistic = c("conf.int",  "standard error = {std.error}",
"p-value = {p.value}")
)
Regression_table1
third_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005), Dataset1)
Regression_table3 <- msummary(list("non-log" =second_regression,
"log"= third_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = "%.4f",  statistic = c("conf.int",  "standard error
={std.error}",
"p-value = {p.value}"))
second_regression <- lm(LEBF20052~HXPC2005+GDPPCUS2005, Dataset1)
Regression_table2 <- msummary(list(first_regression,second_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = "%.4f",  statistic = c("conf.int",  "standard error
={std.error}",
"p-value = {p.value}"))
Regression_table2
third_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005), Dataset1)
Regression_table3 <- msummary(list("non-log" =second_regression,
"log"= third_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = "%.4f",  statistic = c("conf.int",  "standard error
={std.error}",
"p-value = {p.value}"))
Regression_table3
third_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005), Dataset1)
Regression_table3 <- msummary(list("non_log_reg" =second_regression,
"log_reg"= third_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = "%.4f",  statistic = c("conf.int",  "standard error
={std.error}",
"p-value = {p.value}"))
Regression_table3
Regression_table4 <- msummary(list("continent_reg"=continet_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = 5,  statistic = c("conf.int",  "standard error = {std.error}",
"p-value = {p.value}"))
Dataset1$continent <- countrycode(sourcevar = Dataset1[,"Country"],
origin = "country.name",
destination = "continent")
view(Dataset1)
unique(Dataset1[c("continent")])
Dataset1 <- dummy_cols(Dataset1, select_columns = "continent") #used fast dummies to make dummy variables
continet_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005) + continent_Africa +
continent_Americas + continent_Asia + continent_Europe
+ continent_Oceania, Dataset1)
#all dummy variables are in the regression - to let R decide which one to drop
Regression_table4 <- msummary(list("continent_reg"=continet_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = 5,  statistic = c("conf.int",  "standard error = {std.error}",
"p-value = {p.value}"))
Regression_table4
interaction_regression <- lm(LEBF20052~log(HXPC2005)
+log(GDPPCUS2005)
+ continent_Africa
+ continent_Americas
+ continent_Asia
+ continent_Europe
+ continent_Oceania
+ log(HXPC2005):continent_Africa, Dataset1)
Regression_table5 <- msummary(list("interaction_reg"=interaction_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = 5,  statistic = c("conf.int",
"standard error = {std.error}",
"p-value = {p.value}"))
Regression_table5
q.9_regression.1 <- lm(LEBF20052~log(GDPPCUS2005), Dataset1)
q.9_regression.2 <- lm(LEBF20052~log(HXPC2005), Dataset1)
q.9_table <- msummary(list("LEBF_log(GDP)"=q.9_regression.1, "LEBF_log(HXPC)"q.9_regression.2,"LEBF_log(GDP)+log(HXPC)" third_regression), fmt = "%.4f",
q.9_regression.1 <- lm(LEBF20052~log(GDPPCUS2005), Dataset1)
q.9_regression.2 <- lm(LEBF20052~log(HXPC2005), Dataset1)
q.9_table <- msummary(list("LEBF_log(GDP)"=q.9_regression.1, "LEBF_log(HXPC)"=q.9_regression.2,"LEBF_log(GDP)+log(HXPC)"= third_regression), fmt = "%.4f",
stars=c('*' = .1, '**' = .05, '***' = .01),  statistic = c("conf.int",
"standard error =
{std.error}",
"p-value = {p.value}"))
#added pvalues
q.9_table
q.9_regression.1 <- lm(LEBF20052~log(GDPPCUS2005), Dataset1)
q.9_regression.2 <- lm(LEBF20052~log(HXPC2005), Dataset1)
q.9_table <- msummary(list("LEBF_log(GDP)"=q.9_regression.1, "LEBF_log(HXPC)"=q.9_regression.2,
"LEBF_log(GDP)+log(HXPC)"= third_regression), fmt = "%.4f",
stars=c('*' = .1, '**' = .05, '***' = .01),
statistic = c("conf.int", "standard error = {std.error}",
"p-value = {p.value}"))
#added pvalues
q.9_table
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # load the installed package for each new session of R
library(broom) # helps for storing regression output
library(here) # for file organization
library(modelsummary) # For making regression tables
library(psych) # For creating summary statistics table
library(countrycode) # Used to get continents from countries
library(fastDummies) # To create dummy variables
library(vtable)
library(lmtest)
# Read in cleaned data
Dataset1 <- read.csv("Dataset 1_Clean.csv")
# Convert to numerics (aside from Country)
Dataset1[, 2:19] <- lapply(Dataset1[, 2:19], as.numeric)
third_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005), Dataset1)
autocorrelation_se<- msummary( third_regression,
stars=c('*' = .1, '**' = .05, '***' = .01), vcov ="Neweywest",
fmt = "%.4f")
autocorrelation_se
fmt = "%.4f")
autocorrelation_se<- msummary(list("autocorrelation_corr" =third_regression),
stars=c('*' = .1, '**' = .05, '***' = .01), vcov ="Neweywest",
fmt = "%.4f")
autocorrelation_se
robust_se<- msummary(list("robust_se" =third_regression),
stars=c('*' = .1, '**' = .05, '***' = .01), vcov ="Neweywest",
fmt = "%.4f")
robust_se
autocorrelation_se<- msummary(list("autocorrelation_corr" =third_regression),
stars=c('*' = .1, '**' = .05, '***' = .01), vcov ="Neweywest",
fmt = "%.4f")
robust_se<- msummary(list("robust_se" =third_regression),
stars=c('*' = .1, '**' = .05, '***' = .01), vcov ="robust",
fmt = "%.4f")
robust_se
autocorrelation_se<- msummary(list("autocorrelation_corr" =third_regression),
stars=c('*' = .1, '**' = .05, '***' = .01), vcov ="Neweywest",
fmt = "%.4f")
autocorrelation_se
robust_se
robust_se<- msummary(list("robust_se" =third_regression, "autocorrelation_se" = third_regression),
stars=c('*' = .1, '**' = .05, '***' = .01), vcov =c("robust", "Neweywest"),
fmt = "%.4f")
robust_se
se_corrections<- msummary(list("robust_se" =third_regression,
"autocorrelation_se" = third_regression),
stars=c('*' = .1, '**' = .05, '***' = .01), vcov =c("robust", "Neweywest"),
fmt = "%.4f")
se_corrections
plot(third_regression)
plot(third_regression)
#plot the re
par(mfrow = c(2, 2))
se_corrections
plot(third_regression)
se_corrections
#specification using both robust corrections for standard errors and autocorrelation
se_corrections<- msummary(list("homoscedastic" = third_regression,
"robust_se" =third_regression,
"autocorrelation_se" = third_regression),
stars=c('*' = .1, '**' = .05, '***' = .01), vcov =c("classical","robust", "Neweywest"),
fmt = "%.4f")
se_corrections
