#plot the re
par(mfrow = c(2, 2))
se_corrections
plot(third_regression)
se_corrections
#specification using both robust corrections for standard errors and autocorrelation
se_corrections<- msummary(list("homoscedastic" = third_regression,
"robust_se" =third_regression,
"autocorrelation_se" = third_regression),
stars=c('*' = .1, '**' = .05, '***' = .01), vcov =c("classical","robust", "Neweywest"),
fmt = "%.4f")
se_corrections
knitr::opts_chunk$set(echo = TRUE)
name <- Sys.info()
name[7]
### Load the packages we will need for this file ####
library(tidyverse) # load the installed package for each new session of R
library(broom) # helps for storing regression output
library(here) # for file organization
library(modelsummary) # For making regression tables
library(psych) # For creating summary statistics table
library(countrycode) # Used to get continents from countries
library(fastDummies) # To create dummy variables
library(vtable) #Shows information about the variables in your data set
library(lmtest) #A collection of tests, data sets, and examples for diagnostic checking in linear regression models
# enter file path identifiers
here("Desktop", "Graduate Studies", "4. Courses", "Fall 2022", "HAD5744H", "Assignments", "Assignment 1")
assign_data <- read.csv("Dataset 1.csv") # assign data to an object
here()
name <- Sys.info()
name[7]
### Load the packages we will need for this file ####
library(tidyverse) # load the installed package for each new session of R
library(broom) # helps for storing regression output
library(here) # for file organization
library(modelsummary) # For making regression tables
library(psych) # For creating summary statistics table
library(countrycode) # Used to get continents from countries
library(fastDummies) # To create dummy variables
library(vtable) #Shows information about the variables in your data set
library(lmtest) #A collection of tests, data sets, and examples for diagnostic checking in linear regression models
# enter file path identifiers
here()
assign_data <- read.csv("Dataset 1.csv") # assign data to an object
# Scan through dataframe to see variable class types
for(values in names(assign_data)){
print(names(assign_data[values]))
name <- names(assign_data[values])
print(class(assign_data[,values]))
}
knitr::opts_chunk$set(echo = TRUE)
name <- Sys.info()
name[7]
### Load the packages we will need for this file ####
library(tidyverse) # load the installed package for each new session of R
library(broom) # helps for storing regression output
library(here) # for file organization
library(modelsummary) # For making regression tables
library(psych) # For creating summary statistics table
library(countrycode) # Used to get continents from countries
library(fastDummies) # To create dummy variables
library(vtable) #Shows information about the variables in your data set
library(lmtest) #A collection of tests, data sets, and examples for diagnostic checking in linear regression models
# set working directory
here()
assign_data <- read.csv("Dataset 1.csv") # assign data to an object
# Scan through dataframe to see variable class types
for(values in names(assign_data)){
print(names(assign_data[values]))
name <- names(assign_data[values])
print(class(assign_data[,values]))
}
# Convert all to character
assign_data[, 1:19] <- lapply(assign_data[, 1:19], as.character)
# Assign the NAs in dataset to NA
assign_data <- mutate_at(.tbl = assign_data,
.vars = vars(Country:PctPop65Pl2005),
.funs = ~case_when(. == "#N/A" ~ NA_character_,
. == "-" ~ NA_character_,
TRUE ~ .,
TRUE ~ as.character(NA_character_)))
# Save cleaned data
write.csv(assign_data, "Dataset 1_Clean.csv", row.names = FALSE)
# Read in cleaned data
Dataset1 <- read.csv("Dataset 1_Clean.csv")
# Convert to numerics (aside from Country)
Dataset1[, 2:19] <- lapply(Dataset1[, 2:19], as.numeric)
describe(Dataset1)
summary_table <- describe(Dataset1[ ,c("LEBF20052","maxINFM20052","GDPPCUS2005", "HXPC2005","PctHXPUB2005",
"TotFertRate2005","AdolFertRt2005","FtoMPrimaryEnrl2005ONY",
"PctUrb2005", "Sanitation2005ONY","ImprWaterUrb2005ONY",
"ImpWatRur2005ONY", "FLFPR2005", "PctPop0142005", "PctPop65Pl2005")],
fast=TRUE)
summary_table <- summary_table[ ,-(1), drop = FALSE] #drop first column which corresponds to variable number in dataframe
summary_table
first_regression <- lm(LEBF20052~HXPC2005, Dataset1)
Regression_table1 <- msummary(first_regression, fmt = "%.4f",
stars=c('*' = .1, '**' = .05, '***' = .01),
statistic = c("conf.int",  "standard error = {std.error}",
"p-value = {p.value}")
)
Regression_table1
second_regression <- lm(LEBF20052~HXPC2005+GDPPCUS2005, Dataset1)
Regression_table2 <- msummary(list(first_regression,second_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = "%.4f",  statistic = c("conf.int",  "standard error
={std.error}",
"p-value = {p.value}"))
Regression_table2
# Visually, look and see how well the observations fit the linear model
vtable(Dataset1)
attach(Dataset1)
hist(GDPPCUS2005)
hist(log(GDPPCUS2005))
hist(HXPC2005)
hist(log(HXPC2005))
ggplot(Dataset1, aes(x = HXPC2005, y = LEBF20052)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
ggplot(Dataset1, aes(x = GDPPCUS2005, y = LEBF20052)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
ggplot(Dataset1, aes(x = log(HXPC2005), y = LEBF20052)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
ggplot(Dataset1, aes(x = log(GDPPCUS2005), y = LEBF20052)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
third_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005), Dataset1)
Regression_table3 <- msummary(list("non_log_reg" =second_regression,
"log_reg"= third_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = "%.4f",  statistic = c("conf.int",  "standard error
={std.error}",
"p-value = {p.value}"))
Regression_table3
Dataset1$continent <- countrycode(sourcevar = Dataset1[,"Country"],
origin = "country.name",
destination = "continent")
view(Dataset1)
unique(Dataset1[c("continent")])
Dataset1 <- dummy_cols(Dataset1, select_columns = "continent") #used fast dummies to make dummy variables
continet_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005) + continent_Africa +
continent_Americas + continent_Asia + continent_Europe
+ continent_Oceania, Dataset1)
#all dummy variables are in the regression - to let R decide which one to drop
Regression_table4 <- msummary(list("continent_reg"=continet_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = 5,  statistic = c("conf.int",  "standard error = {std.error}",
"p-value = {p.value}"))
Regression_table4
third_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005), Dataset1)
Regression_table3 <- msummary(list("non_log_reg" =second_regression,
"log_reg"= third_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = "%.4f",  statistic = c("conf.int",  "standard error
={std.error}",
"p-value = {p.value}"))
Regression_table3
Dataset1$continent <- countrycode(sourcevar = Dataset1[,"Country"],
origin = "country.name",
destination = "continent")
view(Dataset1)
unique(Dataset1[c("continent")])
Dataset1 <- dummy_cols(Dataset1, select_columns = "continent") #used fast dummies to make dummy variables
continet_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005) + continent_Africa +
continent_Americas + continent_Asia + continent_Europe
+ continent_Oceania, Dataset1)
#all dummy variables are in the regression - to let R decide which one to drop
Regression_table4 <- msummary(list("continent_reg"=continet_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = 5,  statistic = c("conf.int",  "standard error = {std.error}",
"p-value = {p.value}"))
Regression_table4
interaction_regression <- lm(LEBF20052~log(HXPC2005)
+log(GDPPCUS2005)
+ continent_Africa
+ continent_Americas
+ continent_Asia
+ continent_Europe
+ continent_Oceania
+ log(HXPC2005):continent_Africa, Dataset1)
Regression_table5 <- msummary(list("interaction_reg"=interaction_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = 5,  statistic = c("conf.int",
"standard error = {std.error}",
"p-value = {p.value}"))
Regression_table5
interaction_regression <- lm(LEBF20052~log(HXPC2005)
+log(GDPPCUS2005)
+ continent_Africa
+ continent_Americas
+ continent_Asia
+ continent_Europe
+ continent_Oceania
+ log(HXPC2005):continent_Africa, Dataset1)
Regression_table5 <- msummary(list("interaction_reg"=interaction_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = 5,  statistic = c("conf.int",
"standard error = {std.error}",
"p-value = {p.value}"))
Regression_table5
q.9_regression.1 <- lm(LEBF20052~log(GDPPCUS2005), Dataset1)
q.9_regression.2 <- lm(LEBF20052~log(HXPC2005), Dataset1)
q.9_table <- msummary(list("LEBF_log(GDP)"=q.9_regression.1, "LEBF_log(HXPC)"=q.9_regression.2,
"LEBF_log(GDP)+log(HXPC)"= third_regression), fmt = "%.4f",
stars=c('*' = .1, '**' = .05, '***' = .01),
statistic = c("conf.int", "standard error = {std.error}",
"p-value = {p.value}"))
q.9_table
#plot the residuals vs fitted values
par(mfrow = c(2, 2))
plot(interaction_regression)
#plot shows heteroskedasticity may exist
#Breusch-Pagan test for heteroskedasticity
lmtest::bptest(interaction_regression)
#the bptest is showing that the we can reject the null that the residuals are distributed with equal variance (homoscedasticty) as there is a high test statistic (BP = 49.79) and a p value < 0.05, therefore we can reject the null that the residuals are homoscedastic
#specification using both robust corrections for standard errors and autocorrelation
se_corrections<- msummary(list("homoscedastic" = interaction_regression,
"robust_se" =interaction_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
vcov =c("classical","robust"),
fmt = "%.2f", statistic = c("conf.int", "standard error = {std.error}",
"p-value = {p.value}"))
se_corrections
knitr::write_bib(file = 'packages.bib') # Constructs a citation file for all packages used in this assignment.
knitr::opts_chunk$set(echo = TRUE)
unlink("Assignment1_RMD_cache", recursive = TRUE)
knitr::opts_chunk$set(echo = TRUE)
### Load the packages we will need for this file ####
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
install.packages("knitr")
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
install.packages("flextable")
library(flextable)
knitr::opts_chunk$set(echo = TRUE)
name <- Sys.info()
name[7]
### Load the packages we will need for this file ####
library(tidyverse) # load the installed package for each new session of R
library(broom) # helps for storing regression output
library(here) # for file organization
library(modelsummary) # For making regression tables
library(psych) # For creating summary statistics table
library(countrycode) # Used to get continents from countries
library(fastDummies) # To create dummy variables
library(vtable) #Shows information about the variables in your data set
library(lmtest) #A collection of tests, data sets, and examples for diagnostic checking in linear regression models
library(flextable) #Create pretty tables for 'HTML', 'PDF', 'Microsoft Word', 'Microsoft PowerPoint' documents from 'R Markdown'
# set working directory
here()
assign_data <- read.csv("Dataset 1.csv") # assign data to an object
first_regression <- lm(LEBF20052~HXPC2005, Dataset1)
second_regression <- lm(LEBF20052~HXPC2005+GDPPCUS2005, Dataset1)
second_regression <- lm(LEBF20052~HXPC2005+GDPPCUS2005, Dataset1)
Dataset1 <- read.csv("Dataset 1_Clean.csv")
# Convert to numerics (aside from Country)
Dataset1[, 2:19] <- lapply(Dataset1[, 2:19], as.numeric)
third_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005), Dataset1)
continet_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005) + continent_Africa +
continent_Americas + continent_Asia + continent_Europe
+ continent_Oceania, Dataset1)
Dataset1$continent <- countrycode(sourcevar = Dataset1[,"Country"],
origin = "country.name",
destination = "continent")
Dataset1 <- dummy_cols(Dataset1, select_columns = "continent") #used fast dummies to make dummy variables
continet_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005) + continent_Africa +
continent_Americas + continent_Asia + continent_Europe
+ continent_Oceania, Dataset1)
interaction_regression <- lm(LEBF20052~log(HXPC2005)
+log(GDPPCUS2005)
+ continent_Africa
+ continent_Americas
+ continent_Asia
+ continent_Europe
+ continent_Oceania
+ log(HXPC2005):continent_Africa, Dataset1)
Regression_table5 <- msummary(list("interaction_reg"=interaction_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = 5,  statistic = c("conf.int",
"standard error = {std.error}",
"p-value = {p.value}"))
Regression_table5
describe(Dataset1)
summary_table <- describe(Dataset1[ ,c("LEBF20052","maxINFM20052","GDPPCUS2005", "HXPC2005","PctHXPUB2005",
"TotFertRate2005","AdolFertRt2005","FtoMPrimaryEnrl2005ONY",
"PctUrb2005", "Sanitation2005ONY","ImprWaterUrb2005ONY",
"ImpWatRur2005ONY", "FLFPR2005", "PctPop0142005", "PctPop65Pl2005")],
fast=TRUE)
summary_table <- summary_table[ ,-(1), drop = FALSE] #drop first column which corresponds to variable number in dataframe
summary_table
vtable(Dataset1)
first_regression <- lm(LEBF20052~HXPC2005, Dataset1)
Regression_table1 <- msummary(first_regression, fmt = "%.4f",
stars=c('*' = .1, '**' = .05, '***' = .01),
statistic = c("conf.int",  "standard error = {std.error}",
"p-value = {p.value}")
)
Regression_table1
second_regression <- lm(LEBF20052~HXPC2005+GDPPCUS2005, Dataset1)
Regression_table2 <- msummary(list(first_regression,second_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = "%.4f",  statistic = c("conf.int",  "standard error
={std.error}",
"p-value = {p.value}"))
Regression_table2
Regression_table2 <- msummary(list("Q.4_reg"=first_regression,"Q.5_reg"=second_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = "%.4f",  statistic = c("conf.int",  "standard error
={std.error}",
"p-value = {p.value}"))
Regression_table2
# Visually, look and see how well the observations fit the linear model
vtable(Dataset1)
attach(Dataset1)
hist(GDPPCUS2005)
hist(log(GDPPCUS2005))
hist(HXPC2005)
hist(log(HXPC2005))
ggplot(Dataset1, aes(x = HXPC2005, y = LEBF20052)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
ggplot(Dataset1, aes(x = GDPPCUS2005, y = LEBF20052)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
ggplot(Dataset1, aes(x = log(HXPC2005), y = LEBF20052)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
ggplot(Dataset1, aes(x = log(GDPPCUS2005), y = LEBF20052)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
hist(LEBF20052)
third_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005), Dataset1)
Regression_table3 <- msummary(list("non_log_reg" =second_regression,
"log_reg"= third_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = "%.4f",  statistic = c("conf.int",  "standard error
={std.error}",
"p-value = {p.value}"))
Regression_table3
Dataset1$continent <- countrycode(sourcevar = Dataset1[,"Country"],
origin = "country.name",
destination = "continent")
view(Dataset1)
unique(Dataset1[c("continent")])
Dataset1 <- dummy_cols(Dataset1, select_columns = "continent") #used fast dummies to make dummy variables
continet_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005) + continent_Africa +
continent_Americas + continent_Asia + continent_Europe
+ continent_Oceania, Dataset1)
#all dummy variables are in the regression - to let R decide which one to drop
Regression_table4 <- msummary(list("continent_reg"=continet_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = 5,  statistic = c("conf.int",  "standard error = {std.error}",
"p-value = {p.value}"))
Regression_table4
unique(Dataset1[c("continent")])
Regression_table4
interaction_regression <- lm(LEBF20052~log(HXPC2005)
+log(GDPPCUS2005)
+ continent_Africa
+ continent_Americas
+ continent_Asia
+ continent_Europe
+ continent_Oceania
+ log(HXPC2005):continent_Africa, Dataset1)
Regression_table5 <- msummary(list("interaction_reg"=interaction_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = 5,  statistic = c("conf.int",
"standard error = {std.error}",
"p-value = {p.value}"))
Regression_table5
q.9_regression.1 <- lm(LEBF20052~log(GDPPCUS2005), Dataset1)
q.9_regression.2 <- lm(LEBF20052~log(HXPC2005), Dataset1)
q.9_table <- msummary(list("LEBF_log(GDP)"=q.9_regression.1, "LEBF_log(HXPC)"=q.9_regression.2,
"LEBF_log(GDP)+log(HXPC)"= third_regression), fmt = "%.4f",
stars=c('*' = .1, '**' = .05, '***' = .01),
statistic = c("conf.int", "standard error = {std.error}",
"p-value = {p.value}"))
q.9_table
lmtest::bptest(interaction_regression)
install.packages("bookdown")
install.packages("bookdown")
---
title: "Assignment 1"
knitr::opts_chunk$set(echo = TRUE)
# Scan through dataframe to see variable class types
for(values in names(assign_data)){
print(names(assign_data[values]))
name <- names(assign_data[values])
print(class(assign_data[,values]))
}
name <- Sys.info()
name[7]
#Husayn Jessa and Aidan Bodner worked on this assignment together
### Load the packages we will need for this file ####
library(tidyverse) # load the installed package for each new session of R
library(broom) # helps for storing regression output
library(here) # for file organization
library(modelsummary) # For making regression tables
library(psych) # For creating summary statistics table
library(countrycode) # Used to get continents from countries
library(fastDummies) # To create dummy variables
library(vtable) #Shows information about the variables in your data set
library(lmtest) #A collection of tests, data sets, and examples for diagnostic checking in linear regression models
library(flextable) #Create pretty tables for 'HTML', 'PDF', 'Microsoft Word', 'Microsoft PowerPoint' documents from 'R Markdown'
# set working directory
here()
assign_data <- read.csv("Dataset 1.csv") # assign data to an object
knitr::opts_chunk$set(echo = TRUE)
# Scan through dataframe to see variable class types
for(values in names(assign_data)){
print(names(assign_data[values]))
name <- names(assign_data[values])
print(class(assign_data[,values]))
}
# Convert all to character
assign_data[, 1:19] <- lapply(assign_data[, 1:19], as.character)
# Assign the NAs in dataset to NA
assign_data <- mutate_at(.tbl = assign_data,
.vars = vars(Country:PctPop65Pl2005),
.funs = ~case_when(. == "#N/A" ~ NA_character_,
. == "-" ~ NA_character_,
TRUE ~ .,
TRUE ~ as.character(NA_character_)))
# Save cleaned data
write.csv(assign_data, "Dataset 1_Clean.csv", row.names = FALSE)
# Read in cleaned data
Dataset1 <- read.csv("Dataset 1_Clean.csv")
# Convert to numerics (aside from Country)
Dataset1[, 2:19] <- lapply(Dataset1[, 2:19], as.numeric)
# Visually, look and see how well the observations fit the linear model
attach(Dataset1)
hist(GDPPCUS2005)
hist(log(GDPPCUS2005))
hist(HXPC2005)
hist(log(HXPC2005))
hist(LEBF20052)
ggplot(Dataset1, aes(x = HXPC2005, y = LEBF20052)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
ggplot(Dataset1, aes(x = GDPPCUS2005, y = LEBF20052)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
ggplot(Dataset1, aes(x = log(HXPC2005), y = LEBF20052)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
ggplot(Dataset1, aes(x = log(GDPPCUS2005), y = LEBF20052)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
#plot the residuals vs fitted values
par(mfrow = c(2, 2))
plot(interaction_regression)
interaction_regression <- lm(LEBF20052~log(HXPC2005)
+log(GDPPCUS2005)
+ continent_Africa
+ continent_Americas
+ continent_Asia
+ continent_Europe
+ continent_Oceania
+ log(HXPC2005):continent_Africa, Dataset1)
Dataset1$continent <- countrycode(sourcevar = Dataset1[,"Country"],
origin = "country.name",
destination = "continent")
view(Dataset1)
unique(Dataset1[c("continent")])
#the country code package grouped North and South America into the Americas
Dataset1 <- dummy_cols(Dataset1, select_columns = "continent") #used fast dummies to make dummy variables
continet_regression <- lm(LEBF20052~log(HXPC2005)+log(GDPPCUS2005) + continent_Africa +
continent_Americas + continent_Asia + continent_Europe
+ continent_Oceania, Dataset1)
#all dummy variables are in the regression - to let R decide which one to drop (R decided to drop Oceania) to avoid the dummy variable trap
Regression_table4 <- msummary(list("continent_reg"=continet_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = 5,  statistic = c("conf.int",  "standard error = {std.error}",
"p-value = {p.value}"))
Regression_table4
interaction_regression <- lm(LEBF20052~log(HXPC2005)
+log(GDPPCUS2005)
+ continent_Africa
+ continent_Americas
+ continent_Asia
+ continent_Europe
+ continent_Oceania
+ log(HXPC2005):continent_Africa, Dataset1)
Regression_table5 <- msummary(list("interaction_reg"=interaction_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = 5,  statistic = c("conf.int",
"standard error = {std.error}",
"p-value = {p.value}"))
Regression_table5
#plot the residuals vs fitted values
par(mfrow = c(2, 2))
plot(interaction_regression)
#plot shows heteroskedasticity may exist
#Breusch-Pagan test for heteroskedasticity
lmtest::bptest(interaction_regression)
#the bptest is showing that the we can reject the null that the residuals are distributed with equal variance (homoscedasticty) as there is a high test statistic (BP = 49.79) and a p value < 0.05, therefore we can reject the null that the residuals are homoscedastic
#specification using both robust corrections for standard errors and autocorrelation
se_corrections<- msummary(list("homoscedastic" = interaction_regression,
"robust_se" =interaction_regression),
stars=c('*' = .1, '**' = .05, '***' = .01),
vcov =c("classical","robust"),
fmt = "%.2f", statistic = c("conf.int", "standard error = {std.error}",
"p-value = {p.value}"))
se_corrections
knitr::write_bib(file = 'packages.bib') # Constructs a citation file for all packages used in this assignment.
