knitr::opts_chunk$set(echo = TRUE)
library(here)
here()
library(haven)
assign_data <- read_dta("Assignment 2/Dataset2a_Claims (1).dta")
here()
assign_data <- read_dta("/Users/aidanbodner/Documents/GitHub/HAD5744Assignment 2/Dataset2a_Claims (1).dta")
assign_data <- read_dta("/Users/aidanbodner/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta")
View(assign_data)
library(dplyr)
library(tidyr)
assign_data %>%
summarise_all(funs(sum(is.na(.))))
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(haven)
library(tidyr)
here()
assign_data <- read_dta("/Users/aidanbodner/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta")
assign_data %>%
summarise_all(funs(sum(is.na(.))))
library(here)
library(haven)
library(tidyr)
here()
assign_data <- read_dta("/Users/aidanbodner/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta")
assign_data %>%
summarise_all(funs(sum(is.na(.))))
library(dplyr)
here()
assign_data <- read_dta("/Users/aidanbodner/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta")
assign_data %>%
summarise_all(funs(sum(is.na(.))))
?is.na
assign_data %>%
summarise_all(funs(sum(is.na())))
assign_data %>%
summarise_all(funs(sum(is.na(.))))
assign_data <- read_dta("/Users/aidanbodner/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta",
na.strings = c(" ", "", "NA", "9999: Missing"))
assign_data <- read_dta("/Users/aidanbodner/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta",
na.strings = c(" ", "", "NA"))
assign_data <- read_dta("/Users/aidanbodner/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta",
na.strings = c(" ", ""))
assign_data <- read_dta("/Users/aidanbodner/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta",
na.strings = c(" ",))
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(haven)
library(tidyr)
library(dplyr)
library(gtsummary)
library(vtable)
library(MatchIt)
library(modelsummary)
here()
assign_data <- read_dta("/Users/husaynjessa/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta")
assign_data %>%
summarise_all(funs(sum(is.na(.)))) # Returns no NAs, can probably remove
question1d_match <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest")
question1d_match <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest")
summary(question1d_match)
qdmatchdata <-  match.data(question1d_match)
View(question1d_match)
balance_table <- sumtable(data=qd_match_data,group="hdhp",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
qd_match_data <-  match.data(question1d_match)
balance_table <- sumtable(data=qd_match_data,group="hdhp",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
matched_balance_table <- sumtable(data=qd_match_data,group="hdhp",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
matched_balance_table
view(matched_balance_table)
View(matched_balance_table)
matched_balance_table <- sumtable(data=qd_match_data,group="hdhp",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
View(matched_balance_table)
view(matched_balance_table)
matched_balance_table <- sumtable(data=qd_match_data,group="hdhp",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
summary(matched_balance_table)
balance_table <- sumtable(data=assign_data,group="hdhp",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
balance_table <- sumtable(data=assign_data,group="hdhp",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
view(balance_table)
library(here)
library(haven)
library(tidyr)
library(dplyr)
library(gtsummary)
library(vtable)
library(MatchIt)
library(modelsummary)
view(balance_table)
install.packages("gtsummary")
install.packages("gtsummary")
View(qd_match_data)
balance_table <- sumtable(data=assign_data,group="hdhp",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
balance_table
matched_balance_table <- sumtable(data=qd_match_data,group="hdhp",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
matched_balance_table
sumtable(data=qd_match_data,group="hdhp",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
matched_balance_table <- sumtable(data=qd_match_data,group="hdhp",
out = "return",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
matched_balance_table
balance_table <- sumtable(data=assign_data,group="hdhp",
out = "return"
vars=c("age", "sex", "famsize", "policyholder",
balance_table <- sumtable(data=assign_data,group="hdhp",
out = "return",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
question1d_match <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
replace = TRUE,
distance = "scaled_euclidean")
question1e_match <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
replace = TRUE
)
summary(question1e_match)
qe_psmmatch_data <- match.data(question1e_match)
matched_psm_balance_table <- sumtable(data=qd_match_data,group="hdhp",
out = "return",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
matched_psm_balance_table
hist(regdata_psm$distance) # Look at overall distribution of propensity scores
matched_psm_balance_table <- sumtable(data=qe_psmmatch_data,group="hdhp",
out = "return",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
matched_psm_balance_table
hist(qe_psmmatch_data$distance) # Look at overall distribution of propensity scores
hist(qe_psmmatch_data) # Look at overall distribution of propensity scores
hist(qe_psmmatch_data$distance) # Look at overall distribution of propensity scores
ggplot(qe_psmmatch_data,aes(x=distance, fill = factor(pay))) +
geom_histogram(binwidth = .05,color='black') +
theme_minimal() +
labs(x="Propensity Score", y="Count",fill="pay")
library(ggplot2)
ggplot(qe_psmmatch_data,aes(x=distance, fill = factor(pay))) +
geom_histogram(binwidth = .05,color='black') +
theme_minimal() +
labs(x="Propensity Score", y="Count",fill="pay")
question1e_reg <- lm(pay ~ hdhp, data = qe_psmmatch_data)
msummary(question1e_reg)
ggplot(qe_psmmatch_data,aes(x=distance, fill = factor(pay))) +
geom_histogram(binwidth = .05,color='black') +
theme_minimal() +
labs(x="Propensity Score", y="Count",fill="pay")
