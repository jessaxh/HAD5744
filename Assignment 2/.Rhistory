add_p(test = everything() ~ "t.test")
unmatched_table
msummary(list("naive_regression" = one_b_reg_naive))
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder  + num_chronicconditions + num_scrips,, data = regdata, weights = weights)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,, data = regdata, weights = weights)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
msummary(list("nearest_neighbour_match" = question1d_reg))
```{r Question 1d}
question1d_match <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
replace = TRUE,
distance = "scaled_euclidean",
verbose = TRUE)
summary(question1d_match)
q_d_match_data <-  match.data(question1d_match)
write.csv(q_d_match_data, "/Users/aidanbodner/Documents/GitHub/HAD5744/Assignment 2/Question_1d_matched_data.csv")
knitr::opts_chunk$set(echo = TRUE)
library(here) # To set directory
library(haven) # To import data
library(dplyr) # For piping
library(gtsummary) # For some balance tables
library(MatchIt) # For matching
library(modelsummary) # For some balance tables
library(ggplot2) # To create plots
library(vtable) #To output summary tables
here()
assign_data <- read_dta("/Users/husaynjessa/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta")
assign_data %>%
summarise_all(funs(sum(is.na(.)))) # Returns no NAs, can probably remove
ggplot(qe_psmmatch_data, aes(x=distance, fill = factor(hdhp))) +
geom_histogram(color='black') +
theme_minimal() +
labs(x="Propensity Score", y="Count",fill="hdhp")
question1e_match <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
replace = TRUE
)
question1c_unmatched_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips, data = assign_data)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_chronicconditions + num_scrips, data = regdata, weights = weights)
question1c_match <- matchit(hdhp ~ num_hospitalizations,
data = assign_data,
method = "exact")
regdata <-  match.data(question1c_match)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_chronicconditions + num_scrips, data = regdata, weights = weights)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_chronicconditions + num_scrips, data = regdata)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_chronicconditions + num_scrips, data = regdata, weights = weights)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder + num_hospitalizations +
num_chronicconditions + num_scrips, data = regdata, weights = weights)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder  +
num_chronicconditions + num_scrips, data = regdata, weights = weights)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
one_b_reg_naive <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data)
msummary(list("naive_regression" = one_b_reg_naive))
question1c_match <- matchit(hdhp ~ num_hospitalizations,
data = assign_data,
method = "exact")
regdata <-  match.data(question1c_match)
question1c_unmatched_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips, data = assign_data)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder  +
num_chronicconditions + num_scrips, data = regdata, weights = weights)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
onlyhospitalizations_matched_balance_table <- tbl_summary(data = regdata, by = "hdhp",
type = list(num_hospitalizations ~ "continuous"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c(
"num_hospitalizations")) %>%
add_p(test = everything() ~ "t.test")
onlyhospitalizations_matched_balance_table
onlyhospitalizations_matched_balance_table <- tbl_summary(data = regdata, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c(
"num_hospitalizations")) %>%
add_p(test = everything() ~ "t.test")
onlyhospitalizations_matched_balance_table <- tbl_summary(data = regdata, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c(
"num_hospitalizations")) %>%
add_p(test = everything() ~ "t.test")
onlyhospitalizations_matched_balance_table <- tbl_summary(data = regdata, by = "hdhp",
type = list(num_hospitalizations ~ "continuous"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c(
"num_hospitalizations")) %>%
add_p(test = everything() ~ "t.test")
onlyhospitalizations_matched_balance_table
question1c_reg <- lm(pay ~ hdhp , data = regdata, weights = weights)
question1c_unmatched_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips, data = assign_data)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips, data = regdata, weights = weights)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_chronicconditions + num_scrips, data = regdata, weights = weights)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
knitr::opts_chunk$set(echo = TRUE)
library(here) # To set directory
library(haven) # To import data
library(dplyr) # For piping
library(gtsummary) # For some balance tables
library(MatchIt) # For matching
library(modelsummary) # For some balance tables
library(ggplot2) # To create plots
library(vtable) #To output summary tables
here()
assign_data <- read_dta("/Users/husaynjessa/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta")
assign_data %>%
summarise_all(funs(sum(is.na(.)))) # Returns no NAs, can probably remove
question1c_match <- matchit(hdhp ~ num_hospitalizations,
data = assign_data,
method = "exact")
regdata <-  match.data(question1c_match)
question1c_unmatched_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips, data = assign_data)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_chronicconditions + num_scrips, data = regdata, weights = weights)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
question1c_reg <- lm(pay ~ hdhp , data = regdata, weights = weights)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
question1c_unmatched_reg <- lm(pay ~ hdhp , data = assign_data)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
question1c_reg <- lm(pay ~ hdhp age + sex + famsize + policyholder +
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips , data = regdata, weights = weights)
question1c_unmatched_reg <- lm(pay ~ hdhp age + sex + famsize + policyholder +
question1c_unmatched_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips, data = assign_data)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips , data = regdata)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder + num_chronicconditions + num_scrips , data = regdata)
question1c_unmatched_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips, data = assign_data)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
+ num_chronicconditions + num_scrips , data = regdata)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder + num_hospitalizations
+ num_chronicconditions + num_scrips , data = regdata)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
onlyhospitalizations_matched_balance_table <- tbl_summary(data = regdata, by = "hdhp",
type = list(num_hospitalizations ~ "continuous"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c(
"num_hospitalizations")) %>%
add_p(test = everything() ~ "t.test")
qa_qb_balance_tables <- tbl_merge(tbls = list(unmatched_table,
onlyhospitalizations_matched_balance_table),
tab_spanner = c("UnMatched Balance Table",
"Only Hospitalizations Balance Table"))
assign_data$sex <- as.factor(assign_data$sex) # Convert sex from a character to a factor
assign_data$sex <- as.numeric(assign_data$sex) # Convert sex from a character to a numeric
unmatched_table <- tbl_summary(data = assign_data, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
qa_qb_balance_tables <- tbl_merge(tbls = list(unmatched_table,
onlyhospitalizations_matched_balance_table),
tab_spanner = c("UnMatched Balance Table",
"Only Hospitalizations Balance Table"))
qa_qb_balance_tables
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder
+ num_chronicconditions + num_scrips , data = regdata)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder + num_hospitalizations
+ num_chronicconditions + num_scrips , data = regdata)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder
+ num_chronicconditions + num_scrips , data = regdata)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder + num_hospitalizations +
+ num_chronicconditions + num_scrips , data = regdata)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
question1c_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder  +
+ num_chronicconditions + num_scrips , data = regdata)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg),
)
knitr::opts_chunk$set(echo = TRUE)
library(here) # To set directory
library(haven) # To import data
library(dplyr) # For piping
library(gtsummary) # For some balance tables
library(MatchIt) # For matching
library(modelsummary) # For some balance tables
library(ggplot2) # To create plots
library(vtable) #To output summary tables
here()
assign_data <- read_dta("/Users/husaynjessa/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta")
assign_data %>%
summarise_all(funs(sum(is.na(.)))) # Returns no NAs, can probably remove
assign_data$sex <- as.factor(assign_data$sex) # Convert sex from a character to a factor
assign_data$sex <- as.numeric(assign_data$sex) # Convert sex from a character to a numeric
unmatched_table <- tbl_summary(data = assign_data, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
unmatched_table
one_b_reg_naive <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data)
msummary(list("naive_regression" = one_b_reg_naive))
model_view_1 <- lm(pay~sex, data = assign_data)
model_view_2 <- lm(pay~famsize, data = assign_data)
model_view_3 <- lm(pay~num_scrips, data = assign_data)
plot(assign_data$sex, assign_data$pay)
abline(coef(model_view_1), col="gray")
question1c_match <- matchit(hdhp ~ num_hospitalizations,
data = assign_data,
method = "exact")
summary(question1c_match)
regdata <-  match.data(question1c_match)
question1c_unmatched_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips, data = assign_data)
question1c_reg <- lm(pay ~ hdhp, data = regdata) #using matched data with no covariates
question1c_reg_with_covariates <- lm(pay ~ hdhp + age + sex + famsize + policyholder  +
+ num_chronicconditions + num_scrips , data = regdata)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg,
"Exact Matching Regression w/ Covariates" = question1c_reg_with_covariates),
)
question1c_reg <- lm(pay ~ hdhp, data = regdata, weights = weights) #using matched data with no covariates
question1c_reg_with_covariates <- lm(pay ~ hdhp + age + sex + famsize + policyholder  +
+ num_chronicconditions + num_scrips , data = regdata)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg,
"Exact Matching Regression w/ Covariates" = question1c_reg_with_covariates),
)
summary(question1c_match)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg,
"Exact Matching Regression w/ Covariates" = question1c_reg_with_covariates),
)
msummary(list("naive_regression" = one_b_reg_naive))
onlyhospitalizations_matched_balance_table <- tbl_summary(data = regdata, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c(
"num_hospitalizations")) %>%
add_p(test = everything() ~ "t.test")
onlyhospitalizations_matched_balance_table <- tbl_summary(data = regdata, by = "hdhp",
type = list(num_hospitalizations ~ "continuous"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c(
"num_hospitalizations")) %>%
add_p(test = everything() ~ "t.test")
onlyhospitalizations_matched_balance_table <- tbl_summary(data = regdata, by = "hdhp",
type = list(num_hospitalizations ~ "continuous",
age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),),
onlyhospitalizations_matched_balance_table <- tbl_summary(data = regdata, by = "hdhp",
type = list(num_hospitalizations ~ "continuous",
age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical")),
onlyhospitalizations_matched_balance_table <- tbl_summary(data = regdata, by = "hdhp",
type = list(num_hospitalizations ~ "continuous",
age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c(
"num_hospitalizations")) %>%
add_p(test = everything() ~ "t.test")
knitr::opts_chunk$set(echo = TRUE)
library(here) # To set directory
library(haven) # To import data
library(dplyr) # For piping
library(gtsummary) # For some balance tables
library(MatchIt) # For matching
library(modelsummary) # For some balance tables
library(ggplot2) # To create plots
library(vtable) #To output summary tables
assign_data <- read_dta("/Users/aidanbodner/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta")
question1c_match <- matchit(hdhp ~ num_hospitalizations,
data = assign_data,
method = "exact")
regdata <-  match.data(question1c_match)
question1c_unmatched_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips, data = assign_data)
question1c_reg <- lm(pay ~ hdhp, data = regdata, weights = weights) #using matched data with no covariates
question1c_reg_with_covariates <- lm(pay ~ hdhp + age + sex + famsize + policyholder  +
+ num_chronicconditions + num_scrips , data = regdata)
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg,
"Exact Matching Regression w/ Covariates" = question1c_reg_with_covariates),
)
onlyhospitalizations_matched_balance_table <- tbl_summary(data = regdata, by = "hdhp",
type = list(num_hospitalizations ~ "continuous"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c(
"num_hospitalizations")) %>%
add_p(test = everything() ~ "t.test")
onlyhospitalizations_matched_balance_table <- tbl_summary(data = regdata, by = "hdhp",
type = list(num_hospitalizations ~ "continuous"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c(
"num_hospitalizations")) %>%
add_p(test = everything() ~ "t.test")
onlyhospitalizations_matched_balance_table
qa_qb_balance_tables <- tbl_merge(tbls = list(unmatched_table,
onlyhospitalizations_matched_balance_table),
tab_spanner = c("UnMatched Balance Table",
"Only Hospitalizations Balance Table"))
assign_data$sex <- as.factor(assign_data$sex) # Convert sex from a character to a factor
assign_data$sex <- as.numeric(assign_data$sex) # Convert sex from a character to a numeric
unmatched_table <- tbl_summary(data = assign_data, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
qa_qb_balance_tables <- tbl_merge(tbls = list(unmatched_table,
onlyhospitalizations_matched_balance_table),
tab_spanner = c("UnMatched Balance Table",
"Only Hospitalizations Balance Table"))
qa_qb_balance_tables
knitr::opts_chunk$set(echo = TRUE)
name <- Sys.info() name[7]
?Sys.info
name <- Sys.info()
name[7]
print("=============================Works Cited=============================")
loadedNamespaces() %>%
map(citation) %>%
print(style = "text") # Adds citations for each package to end of .rmd file
library(here) # To set directory
library(haven) # To import data
library(dplyr) # For piping
library(gtsummary) # For some balance tables
library(MatchIt) # For matching
library(modelsummary) # For some balance tables
library(ggplot2) # To create plots
library(vtable) #To output summary tables
print("=============================Works Cited=============================")
loadedNamespaces() %>%
map(citation) %>%
print(style = "text") # Adds citations for each package to end of .rmd file
print("=============================Works Cited=============================")
loadedNamespaces() %>%
map(citation) %>%
print(style = "text") # Adds citations for each package to end of .rmd file
?Map
print("=============================Works Cited=============================")
loadedNamespaces() %>%
purr:map(citation) %>%
print(style = "text") # Adds citations for each package to end of .rmd file
print("=============================Works Cited=============================")
loadedNamespaces() %>%
map(citation) %>%
print(style = "text") # Adds citations for each package to end of .rmd file
library(purrr) # To output reference list
print("=============================Works Cited=============================")
loadedNamespaces() %>%
map(citation) %>%
print(style = "text") # Adds citations for each package to end of .rmd file
knitr::write_bib(file = 'packages.bib') # Constructs a citation file for all packages used in this lecture.
print("=============================Works Cited=============================")
loadedNamespaces() %>%
map(citation) %>%
print(style = "text") # Adds citations for each package to end of .rmd file
knitr::write_bib(file = 'packages.bib') # Constructs a citation file for all packages used in this lecture.
