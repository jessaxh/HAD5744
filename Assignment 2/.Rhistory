qe_psmmatch_data$sex <- as.factor(qe_psmmatch_data$sex) # Convert sex from a character to a factor
qe_psmmatch_data$sex <- as.numeric(qe_psmmatch_data$sex) # Convert sex from a character to a numeric
q_e_matched_table <- tbl_summary(data = qe_psmmatch_data, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
q_e_matched_table
qa_qe_balance_tables <- tbl_merge(tbls = list(unmatched_table,
q_e_matched_table),
tab_spanner = c("UnMatched Balance Table",
"Propensity Score Matched Balance Table"))
qa_qe_balance_tables
question1e_reg <- lm(pay ~ hdhp, data = qe_psmmatch_data, weights = 1/distance)
msummary(list("psm_match" = question1e_reg))
hist(qe_psmmatch_data$distance) # Look at overall distribution of propensity scores
ggplot(qe_psmmatch_data, aes(x=distance, fill = factor(hdhp))) +
geom_histogram(color='black') +
theme_minimal() +
labs(x="Propensity Score", y="Count",fill="hdhp")
liper set to 0.01
# Caliper set to 0.01
question1f_one <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
caliper = c(0.01),
replace = TRUE
)
summary(question1f_one)
# Caliper set to 0.1
question1f_two <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
caliper = c(0.1),
replace = TRUE
)
summary(question1f_two)
# Caliper set to 0.2
question1f_three <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
caliper = c(0.2),
replace = TRUE
)
summary(question1f_three)
# Caliper set to 0.5
question1f_four <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
caliper = c(0.5),
replace = TRUE
)
summary(question1f_four)
# Caliper set to 1
question1f_five <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
caliper = c(1),
replace = TRUE
)
summary(question1f_five)
match_data_one <- match.data(question1f_one)
match_data_two <- match.data(question1f_two)
match_data_three <- match.data(question1f_three)
match_data_four <- match.data(question1f_four)
match_data_five <- match.data(question1f_five)
match_data_one$sex <- as.factor(match_data_one$sex) # Convert sex from a character to a factor
match_data_one$sex <- as.numeric(match_data_one$sex) # Convert sex from a character to a numeric
match_data_two$sex <- as.factor(match_data_two$sex) # Convert sex from a character to a factor
match_data_two$sex <- as.numeric(match_data_two$sex) # Convert sex from a character to a numeric
match_data_three$sex <- as.factor(match_data_three$sex) # Convert sex from a character to a factor
match_data_three$sex <- as.numeric(match_data_three$sex) # Convert sex from a character to a numeric
match_data_four$sex <- as.factor(match_data_four$sex) # Convert sex from a character to a factor
match_data_four$sex <- as.numeric(match_data_four$sex) # Convert sex from a character to a numeric
match_data_five$sex <- as.factor(match_data_five$sex) # Convert sex from a character to a factor
match_data_five$sex <- as.numeric(match_data_five$sex) # Convert sex from a character to a numeric
#Balance Tables for each caliper size
q_f_1_matched_table <- tbl_summary(data = match_data_one, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
q_f_2_matched_table <- tbl_summary(data = match_data_two, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
q_f_3_matched_table <- tbl_summary(data = match_data_three, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
q_f_4_matched_table <- tbl_summary(data = match_data_four, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
q_f_5_matched_table <- tbl_summary(data = match_data_five, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
q_f_1_matched_table
q_f_2_matched_table
q_f_3_matched_table
q_f_4_matched_table
q_f_5_matched_table
caliper_tbls_descr <- tbl_merge(tbls = list(q_f_1_matched_table,
q_f_2_matched_table,
q_f_3_matched_table,
q_f_4_matched_table,
q_f_5_matched_table),
tab_spanner = c("**Caliper Size - 0.01**",
"**Caliper Size - 0.1**",
"**Caliper Size - 0.2**",
"**Caliper Size - 0.5**",
"**Caliper Size - 1**"))
caliper_tbls_descr
question1f_one_reg <- lm(pay ~ hdhp, data = match_data_one, weights = 1/weights)
question1f_two_reg <- lm(pay ~ hdhp, data = match_data_two, weights = 1/weights)
question1f_three_reg <- lm(pay ~ hdhp, data = match_data_three, weights = 1/weights)
question1f_four_reg <- lm(pay ~ hdhp, data = match_data_four, weights = 1/weights)
question1f_five_reg <- lm(pay ~ hdhp, data = match_data_five, weights = 1/weights)
caliper_tbls_reg <- msummary(list("Caliper Size - 0.01" = question1f_one_reg,
"Caliper Size - 0.1" = question1f_two_reg,
"Caliper Size - 0.2" = question1f_three_reg,
"Caliper Size - 0.5" = question1f_four_reg,
"Caliper Size - 1" = question1f_five_reg),
stars=c('*' = .1, '**' = .05, '***' = .01))
caliper_tbls_descr
caliper_tbls_reg
knitr::opts_chunk$set(echo = TRUE)
library(here) # To set directory
library(haven) # To import data
library(dplyr) # For piping
library(gtsummary) # For some balance tables
library(MatchIt) # For matching
library(modelsummary) # For some balance tables
library(ggplot2) # To create plots
library(vtable) #To output summary tables
library(purrr) # To output reference list
knitr::opts_chunk$set(echo = TRUE)
library(here) # To set directory
library(haven) # To import data
library(dplyr) # For piping
library(gtsummary) # For some balance tables
library(MatchIt) # For matching
library(modelsummary) # For some balance tables
library(ggplot2) # To create plots
library(vtable) #To output summary tables
library(purrr) # To output reference list
name <- Sys.info()
name[7]
here()
assign_data <- read_dta("/Users/husaynjessa/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta")
assign_data %>%
summarise_all(funs(sum(is.na(.)))) # Returns no NAs, can probably remove
assign_data$sex <- as.factor(assign_data$sex) # Convert sex from a character to a factor
assign_data$sex <- as.numeric(assign_data$sex) # Convert sex from a character to a numeric
unmatched_table <- tbl_summary(data = assign_data, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
unmatched_table
one_b_reg_naive <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data)
msummary(list("naive_regression" = one_b_reg_naive))
question1c_match <- matchit(hdhp ~ num_hospitalizations,
data = assign_data,
method = "exact")
summary(question1c_match)
regdata <-  match.data(question1c_match)
question1c_unmatched_reg <- lm(pay ~ hdhp + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips, data = assign_data)
question1c_reg <- lm(pay ~ hdhp, data = regdata, weights = weights) #using matched data with no covariates
question1c_reg_with_covariates <- lm(pay ~ hdhp + age + sex + famsize + policyholder  +
+ num_chronicconditions + num_scrips , data = regdata)
#^using matched data with covariates, did not include num_hospitalizations because it was matched on already
msummary(list("Unmatched Regression" = question1c_unmatched_reg,
"Exact Matching Regression" = question1c_reg,
"Exact Matching Regression w/ Covariates" = question1c_reg_with_covariates),
)
onlyhospitalizations_matched_balance_table <- tbl_summary(data = regdata, by = "hdhp",
type = list(num_hospitalizations ~ "continuous"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c(
"num_hospitalizations")) %>%
add_p(test = everything() ~ "t.test")
onlyhospitalizations_matched_balance_table
qa_qb_balance_tables <- tbl_merge(tbls = list(unmatched_table,
onlyhospitalizations_matched_balance_table),
tab_spanner = c("UnMatched Balance Table",
"Only Hospitalizations Balance Table"))
qa_qb_balance_tables
question1d_match <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
replace = TRUE,
distance = "scaled_euclidean",
verbose = TRUE)
summary(question1d_match)
q_d_match_data <-  match.data(question1d_match)
q_d_match_data$sex <- as.factor(q_d_match_data$sex) # Convert sex from a character to a factor
q_d_match_data$sex <- as.numeric(q_d_match_data$sex) # Convert sex from a character to a numeric
q_d_matched_table <- tbl_summary(data = q_d_match_data, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
q_d_matched_table
question1d_reg <- lm(pay ~ hdhp, data = q_d_match_data, weights = weights)
msummary(list("nearest_neighbour_match" = question1d_reg))
qa_qd_balance_tables <- tbl_merge(tbls = list(unmatched_table,
q_d_matched_table),
tab_spanner = c("UnMatched Balance Table",
"Nearest Neighbour Matched Balance Table"))
qa_qd_balance_tables
question1e_match <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
replace = TRUE
)
summary(question1e_match)
qe_psmmatch_data <- match.data(question1e_match)
qe_psmmatch_data$sex <- as.factor(qe_psmmatch_data$sex) # Convert sex from a character to a factor
qe_psmmatch_data$sex <- as.numeric(qe_psmmatch_data$sex) # Convert sex from a character to a numeric
q_e_matched_table <- tbl_summary(data = qe_psmmatch_data, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
q_e_matched_table
qa_qe_balance_tables <- tbl_merge(tbls = list(unmatched_table,
q_e_matched_table),
tab_spanner = c("UnMatched Balance Table",
"Propensity Score Matched Balance Table"))
qa_qe_balance_tables
question1e_reg <- lm(pay ~ hdhp, data = qe_psmmatch_data, weights = 1/distance)
msummary(list("psm_match" = question1e_reg))
hist(qe_psmmatch_data$distance) # Look at overall distribution of propensity scores
ggplot(qe_psmmatch_data, aes(x=distance, fill = factor(hdhp))) +
geom_histogram(color='black') +
theme_minimal() +
labs(x="Propensity Score", y="Count",fill="hdhp")
# Caliper set to 0.01
question1f_one <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
caliper = c(0.01),
replace = TRUE
)
summary(question1f_one)
# Caliper set to 0.1
question1f_two <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
caliper = c(0.1),
replace = TRUE
)
summary(question1f_two)
# Caliper set to 0.2
question1f_three <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
caliper = c(0.2),
replace = TRUE
)
summary(question1f_three)
# Caliper set to 0.5
question1f_four <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
caliper = c(0.5),
replace = TRUE
)
summary(question1f_four)
# Caliper set to 1
question1f_five <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
caliper = c(1),
replace = TRUE
)
summary(question1f_five)
match_data_one <- match.data(question1f_one)
match_data_two <- match.data(question1f_two)
match_data_three <- match.data(question1f_three)
match_data_four <- match.data(question1f_four)
match_data_five <- match.data(question1f_five)
match_data_one$sex <- as.factor(match_data_one$sex) # Convert sex from a character to a factor
match_data_one$sex <- as.numeric(match_data_one$sex) # Convert sex from a character to a numeric
match_data_two$sex <- as.factor(match_data_two$sex) # Convert sex from a character to a factor
match_data_two$sex <- as.numeric(match_data_two$sex) # Convert sex from a character to a numeric
match_data_three$sex <- as.factor(match_data_three$sex) # Convert sex from a character to a factor
match_data_three$sex <- as.numeric(match_data_three$sex) # Convert sex from a character to a numeric
match_data_four$sex <- as.factor(match_data_four$sex) # Convert sex from a character to a factor
match_data_four$sex <- as.numeric(match_data_four$sex) # Convert sex from a character to a numeric
match_data_five$sex <- as.factor(match_data_five$sex) # Convert sex from a character to a factor
match_data_five$sex <- as.numeric(match_data_five$sex) # Convert sex from a character to a numeric
#Balance Tables for each caliper size
q_f_1_matched_table <- tbl_summary(data = match_data_one, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
q_f_2_matched_table <- tbl_summary(data = match_data_two, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
q_f_3_matched_table <- tbl_summary(data = match_data_three, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
q_f_4_matched_table <- tbl_summary(data = match_data_four, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
q_f_5_matched_table <- tbl_summary(data = match_data_five, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
q_f_1_matched_table
q_f_2_matched_table
q_f_3_matched_table
q_f_4_matched_table
q_f_5_matched_table
caliper_tbls_descr <- tbl_merge(tbls = list(q_f_1_matched_table,
q_f_2_matched_table,
q_f_3_matched_table,
q_f_4_matched_table,
q_f_5_matched_table),
tab_spanner = c("**Caliper Size - 0.01**",
"**Caliper Size - 0.1**",
"**Caliper Size - 0.2**",
"**Caliper Size - 0.5**",
"**Caliper Size - 1**"))
caliper_tbls_descr
question1f_one_reg <- lm(pay ~ hdhp, data = match_data_one, weights = 1/weights)
question1f_two_reg <- lm(pay ~ hdhp, data = match_data_two, weights = 1/weights)
question1f_three_reg <- lm(pay ~ hdhp, data = match_data_three, weights = 1/weights)
question1f_four_reg <- lm(pay ~ hdhp, data = match_data_four, weights = 1/weights)
question1f_five_reg <- lm(pay ~ hdhp, data = match_data_five, weights = 1/weights)
caliper_tbls_reg <- msummary(list("Caliper Size - 0.01" = question1f_one_reg,
"Caliper Size - 0.1" = question1f_two_reg,
"Caliper Size - 0.2" = question1f_three_reg,
"Caliper Size - 0.5" = question1f_four_reg,
"Caliper Size - 1" = question1f_five_reg),
stars=c('*' = .1, '**' = .05, '***' = .01))
caliper_tbls_descr
caliper_tbls_reg
print("=============================Works Cited=============================")
loadedNamespaces() %>%
map(citation) %>%
print(style = "text") # Adds citations for each package to end of .rmd file
knitr::write_bib(file = 'packages.bib') # Constructs a citation file for all packages used in this file
