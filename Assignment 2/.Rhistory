vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
view(balance_table)
library(here)
library(haven)
library(tidyr)
library(dplyr)
library(gtsummary)
library(vtable)
library(MatchIt)
library(modelsummary)
view(balance_table)
install.packages("gtsummary")
install.packages("gtsummary")
View(qd_match_data)
balance_table <- sumtable(data=assign_data,group="hdhp",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
balance_table
matched_balance_table <- sumtable(data=qd_match_data,group="hdhp",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
matched_balance_table
sumtable(data=qd_match_data,group="hdhp",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
matched_balance_table <- sumtable(data=qd_match_data,group="hdhp",
out = "return",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
matched_balance_table
balance_table <- sumtable(data=assign_data,group="hdhp",
out = "return"
vars=c("age", "sex", "famsize", "policyholder",
balance_table <- sumtable(data=assign_data,group="hdhp",
out = "return",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
question1d_match <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
replace = TRUE,
distance = "scaled_euclidean")
question1e_match <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
replace = TRUE
)
summary(question1e_match)
qe_psmmatch_data <- match.data(question1e_match)
matched_psm_balance_table <- sumtable(data=qd_match_data,group="hdhp",
out = "return",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
matched_psm_balance_table
hist(regdata_psm$distance) # Look at overall distribution of propensity scores
matched_psm_balance_table <- sumtable(data=qe_psmmatch_data,group="hdhp",
out = "return",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
matched_psm_balance_table
hist(qe_psmmatch_data$distance) # Look at overall distribution of propensity scores
hist(qe_psmmatch_data) # Look at overall distribution of propensity scores
hist(qe_psmmatch_data$distance) # Look at overall distribution of propensity scores
ggplot(qe_psmmatch_data,aes(x=distance, fill = factor(pay))) +
geom_histogram(binwidth = .05,color='black') +
theme_minimal() +
labs(x="Propensity Score", y="Count",fill="pay")
library(ggplot2)
ggplot(qe_psmmatch_data,aes(x=distance, fill = factor(pay))) +
geom_histogram(binwidth = .05,color='black') +
theme_minimal() +
labs(x="Propensity Score", y="Count",fill="pay")
question1e_reg <- lm(pay ~ hdhp, data = qe_psmmatch_data)
msummary(question1e_reg)
ggplot(qe_psmmatch_data,aes(x=distance, fill = factor(pay))) +
geom_histogram(binwidth = .05,color='black') +
theme_minimal() +
labs(x="Propensity Score", y="Count",fill="pay")
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(haven)
library(tidyr)
library(dplyr)
library(gtsummary)
library(vtable)
library(MatchIt)
library(modelsummary)
library(ggplot2)
here()
assign_data <- read_dta("/Users/aidanbodner/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta")
question1e_match <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
replace = TRUE
)
summary(question1e_match)
qe_psmmatch_data <- match.data(question1e_match)
matched_psm_balance_table <- sumtable(data=qe_psmmatch_data,group="hdhp",
out = "return",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
question1e_reg <- lm(pay ~ hdhp, data = qe_psmmatch_data)
msummary(question1e_reg)
hist(qe_psmmatch_data$distance) # Look at overall distribution of propensity scores
ggplot(qe_psmmatch_data,aes(x=distance, fill = factor(pay))) +
geom_histogram(binwidth = .05,color='black') +
theme_minimal() +
labs(x="Propensity Score", y="Count",fill="pay")
ggplot(qe_psmmatch_data,aes(x=distance, fill = factor(pay))) +
geom_histogram(binwidth = .05,color='black') +
theme_minimal() +
labs(x="Propensity Score", y="Count",fill="pay")
question1f_match <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
caliper = c(0.01, 0.1, 0.2, 0.5, 1),
replace = TRUE
)
question1f_match <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
caliper = c("0.01", "0.1", "0.2", "0.5", "1"),
replace = TRUE
)
# Caliper set to 0.01
question1f_one <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
caliper = c(0.01),
replace = TRUE
)
summary(question1f_one)
# Caliper set to 0.1
question1f_two <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
caliper = c(0.1),
replace = TRUE
)
summary(question1f_two)
# Caliper set to 0.2
question1f_three <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
caliper = c(0.2),
replace = TRUE
)
summary(question1f_three)
# Caliper set to 0.5
question1f_four <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
caliper = c(0.5),
replace = TRUE
)
summary(question1f_four)
# Caliper set to 1
question1f_five <- matchit(hdhp ~ num_hospitalizations + age + sex + famsize + policyholder +
num_hospitalizations + num_chronicconditions + num_scrips,
data = assign_data,
method = "nearest",
distance='glm', # generalized linear model for propensity,
caliper = c(1),
replace = TRUE
)
summary(question1f_five)
match_data_one <- match.data(question1f_one)
match_data_two <- match.data(question1f_two)
match_data_three <- match.data(question1f_three)
match_data_four <- match.data(question1f_four)
match_data_five <- match.data(question1f_five)
question1f_one_reg <- lm(pay ~ hdhp, data = match_data_one)
question1f_two_reg <- lm(pay ~ hdhp, data = match_data_two)
question1f_three_reg <- lm(pay ~ hdhp, data = match_data_three)
question1f_four_reg <- lm(pay ~ hdhp, data = match_data_four)
question1f_five_reg <- lm(pay ~ hdhp, data = match_data_five)
msummary(question1f_one_reg)
msummary(question1f_two_reg)
msummary(question1f_three_reg)
msummary(question1f_four_reg)
msummary(question1f_five_reg)
balance_table <- sumtable(data=assign_data,group="hdhp",
out = "return",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=T)
View(balance_table)
class(balance_table)
t.test(assign_data)
t.test(assign_data)
?t.test
t.test(sex
, data = assign_data)
t.test(assign_data$sex)
t.test(assign_data$sex == "2", assign_data$sex == "1")
sex_t_test <- t.test(assign_data$sex == "2", assign_data$sex == "1")
balance_table <- sumtable(data=assign_data,group="hdhp",
out = "return",
vars=c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips"),
digits=2, group.test=F)
sex_t_test <- sex_t_test$p.value
sex_t_test
cbind(balance_table, sex_t_test)
vtable(assign_data)
help(independence.test)
tbl_summary(data = assign_data, by = "hdhp",
statistic = list(all_continuous() ~ "{mean} ({sd})"),
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
?tbl_summary
tbl_summary(data = assign_data, by = "hdhp",
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
tbl_summary(data = assign_data, by = "hdhp",
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
class(assign_data$sex)
assign_data$sex <- as.factor(assign_data$sex)
tbl_summary(data = assign_data, by = "hdhp",
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
class(assign_data$sex)
levels(assign_data$sex)
assign_data <- read_dta("/Users/aidanbodner/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta")
assign_data$sex[assign_data$sex == "1"] <- 1
assign_data$sex[assign_data$sex == "2"] <- 2
tbl_summary(data = assign_data, by = "hdhp",
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
class(assign_data$sex)
assign_data$sex[assign_data$sex == "1"] <- 1
assign_data$sex[assign_data$sex == "2"] <- 2
class(assign_data$sex)
assign_data$sex <- assign_data$sex[assign_data$sex == "1"] <- 1
assign_data$sex <- assign_data$sex[assign_data$sex == "2"] <- 2
class(assign_data$sex)
tbl_summary(data = assign_data, by = "hdhp",
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
tbl_summary(data = assign_data, by = "hdhp",
type = list(sex ~ "dichotomous"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
(1).dta")
assign_data <- read_dta("/Users/aidanbodner/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta")
assign_data$sex <- as.factor(assign_data$sex)
tbl_summary(data = assign_data, by = "hdhp",
type = list(sex ~ "dichotomous"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
range(assign_data$num_hospitalizations)
tbl_summary(data = assign_data, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
class(assign_data$sex)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(haven)
library(tidyr)
library(dplyr)
library(gtsummary)
library(vtable)
library(MatchIt)
library(modelsummary)
library(ggplot2)
here()
assign_data <- read_dta("/Users/aidanbodner/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta")
assign_data$sex <- as.factor(assign_data$sex) # Convert sex from a character to a factor
tbl_summary(data = assign_data, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
q.1_tbl <- tbl_summary(data = assign_data, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
q.1_tbl <- tbl_summary(data = assign_data, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
q.1_tbl
assign_data <- read_dta("/Users/aidanbodner/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta")
assign_data$sex[assign_data$sex == "1"] <- 0
assign_data$sex[assign_data$sex == "2"] <- 1
assign_data$sex <- as.factor(assign_data$sex) # Convert sex from a character to a factor
tbl_summary(data = assign_data, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
class(assign_data$policyholder)
assign_data <- read_dta("/Users/aidanbodner/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta")
assign_data$sex[assign_data$sex == "1"] <- 0
assign_data$sex[assign_data$sex == "2"] <- 1
#assign_data$sex <- as.factor(assign_data$sex) # Convert sex from a character to a factor
tbl_summary(data = assign_data, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
View(assign_data)
summary(assign_data$policyholder)
tbl_summary(data = assign_data, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "dichotomous"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
tbl_summary(data = assign_data, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
tbl_summary(data = assign_data, by = "hdhp",
type = list(sex ~ "categorical"),
statistic = list(all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("sex")) %>%
add_p(test = everything() ~ "t.test")
class(assign_data$sex)
assign_data$sex[assign_data$sex == "1"] <- 0
assign_data$sex[assign_data$sex == "2"] <- 1
class(assign_data$sex)
assign_data <- read_dta("/Users/aidanbodner/Documents/GitHub/HAD5744/Assignment 2/Dataset2a_Claims (1).dta")
assign_data$sex[assign_data$sex == "1"] <- 0
assign_data$sex[assign_data$sex == "2"] <- 1
class(assign_data$sex)
assign_data$sex <- as.factor(assign_data$sex) # Convert sex from a character to a factor
class(assign_data$sex)
assign_data$sex <- as.numeric(assign_data$sex) # Convert sex from a character to a factor
class(assign_data$sex)
tbl_summary(data = assign_data, by = "hdhp",
type = list(sex ~ "categorical"),
statistic = list(all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("sex")) %>%
add_p(test = everything() ~ "t.test")
tbl_summary(data = assign_data, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
tbl_summary(data = assign_data, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{mean} ({sd})"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
tbl_summary(data = assign_data, by = "hdhp",
type = list(age ~ "continuous",
famsize ~ "continuous",
policyholder ~ "categorical",
num_hospitalizations ~ "continuous",
num_chronicconditions ~ "continuous",
num_scrips ~ "continuous",
sex ~ "categorical"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
digits = everything() ~ 2,
include = c("age", "sex", "famsize", "policyholder",
"num_hospitalizations", "num_chronicconditions", "num_scrips")) %>%
add_p(test = everything() ~ "t.test")
